[{"path":"index.html","id":"preface","chapter":"Preface","heading":"Preface","text":"","code":""},{"path":"index.html","id":"back-to-in-person-teaching","chapter":"Preface","heading":"Back to in-person teaching","text":"\ncorona virus pandemic still impacts lives changes way\nteach learn. course held person, hope \nback nearly normal. learnt lot online-teaching phase\ntools proved useful. Thus, try move \n-person phase.\ncourse, use following tools:ILIAS: moodle platform UoC. registered already.Campuswire: chat platform decrease number emails allow natural exchange participants lecturer. received invitation email, , email , please.","code":""},{"path":"index.html","id":"intended-learning-outcomes-ilos","chapter":"Preface","heading":"Intended learning outcomes (ILOs)","text":"end course able \nImport/read data R.\n\nPrepare data analysis.\n\nVisualize data.\n\nExplain apply statistical methods learnt course.\n\nCombine code report reproducible way.\n\nApply selected methods learnt course new data set \nwrite reproducible report.\n","code":""},{"path":"index.html","id":"literature","chapter":"Preface","heading":"Literature","text":"using book ModernDive: Statistical Inference via Data Science (Ismay Kim 2021) mainly. Additionally, recommend time time R Data Science (Wickham Grolemund 2021) OpenIntro Statistics (Diez, √áetinkaya-Rundel, Barr 2019). report, additional literature search depending topic.","code":""},{"path":"index.html","id":"why-these-lecture-notes","chapter":"Preface","heading":"Why these lecture notes","text":"document working live document updated course. comprehensive, help navigate introduction R statistics smoothly.use different colour boxes\nInfos tips\n\nLearning outcomes\n\nimportant\n\ndefinition\n\nexercise inside chapter.\n","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Preface","heading":"Acknowledgements","text":"document draws free material provided byModernDive: Ismay Kim (2021) free Problem Sets authored Jenny Smetzer, William Hopper, Albert Y. Kim, Chester Ismay (https://moderndive.github.io/moderndive_labs/index.html)ModernDive: Ismay Kim (2021) free Problem Sets authored Jenny Smetzer, William Hopper, Albert Y. Kim, Chester Ismay (https://moderndive.github.io/moderndive_labs/index.html)R Data Science (r4ds): Wickham Grolemund (2021)R Data Science (r4ds): Wickham Grolemund (2021)Data Science Box (https://datasciencebox.org/) free book Diez, √áetinkaya-Rundel, Barr (2019)Data Science Box (https://datasciencebox.org/) free book Diez, √áetinkaya-Rundel, Barr (2019)One thank people enough contribution  community !Credit: https://xkcd.com/2400/","code":""},{"path":"index.html","id":"reproducibility","chapter":"Preface","heading":"Reproducibility","text":"book written RStudio using Bookdown compiled R version 4.2.0 (2022-04-22). need following packages reproduce examples work exercises:complete information last session build book:work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":"## R version 4.2.0 (2022-04-22)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 22.04 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/atlas/libblas.so.3.10.3\n## LAPACK: /usr/lib/x86_64-linux-gnu/atlas/liblapack.so.3.10.3\n## \n## locale:\n##  [1] LC_CTYPE=de_DE.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=de_DE.UTF-8        LC_COLLATE=de_DE.UTF-8    \n##  [5] LC_MONETARY=de_DE.UTF-8    LC_MESSAGES=de_DE.UTF-8   \n##  [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=de_DE.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] DT_0.22           forcats_0.5.1     stringr_1.4.0     dplyr_1.0.9      \n##  [5] purrr_0.3.4       readr_2.1.2       tidyr_1.2.0       tibble_3.1.6     \n##  [9] ggplot2_3.3.5     tidyverse_1.3.1   kableExtra_1.3.4  fontawesome_0.2.2\n## \n## loaded via a namespace (and not attached):\n##  [1] tufte_0.12        svglite_2.1.0     lubridate_1.8.0   rprojroot_2.0.3  \n##  [5] assertthat_0.2.1  digest_0.6.29     utf8_1.2.2        R6_2.5.1         \n##  [9] cellranger_1.1.0  backports_1.4.1   reprex_2.0.1      evaluate_0.15    \n## [13] highr_0.9         httr_1.4.2        pillar_1.7.0      rlang_1.0.2      \n## [17] readxl_1.4.0      rstudioapi_0.13   jquerylib_0.1.4   rmarkdown_2.14   \n## [21] desc_1.4.1        webshot_0.5.3     htmlwidgets_1.5.4 munsell_0.5.0    \n## [25] broom_0.8.0       compiler_4.2.0    modelr_0.1.8      xfun_0.30        \n## [29] pkgconfig_2.0.3   systemfonts_1.0.4 htmltools_0.5.2   downlit_0.4.0    \n## [33] tidyselect_1.1.2  bookdown_0.26     fansi_1.0.3       viridisLite_0.4.0\n## [37] withr_2.5.0       crayon_1.5.1      tzdb_0.3.0        dbplyr_2.1.1     \n## [41] grid_4.2.0        jsonlite_1.8.0    gtable_0.3.0      lifecycle_1.0.1  \n## [45] DBI_1.1.2         magrittr_2.0.3    scales_1.2.0      cli_3.3.0        \n## [49] stringi_1.7.6     cachem_1.0.6      fs_1.5.2          xml2_1.3.3       \n## [53] bslib_0.3.1       ellipsis_0.3.2    generics_0.1.2    vctrs_0.4.1      \n## [57] tools_4.2.0       glue_1.6.2        hms_1.1.1         fastmap_1.1.0    \n## [61] yaml_2.3.5        colorspace_2.0-3  sessioninfo_1.2.2 rvest_1.0.2      \n## [65] memoise_2.0.1     knitr_1.39        haven_2.5.0       sass_0.4.1"},{"path":"introduction-to-r-and-rstudio.html","id":"introduction-to-r-and-rstudio","chapter":"1 Introduction to R and RStudio","heading":"1 Introduction to R and RStudio","text":"\nCreate save files RStudio\n\nUse R calculator\n\nCreate first objects R\n\nCall first functions R\n\nfirst plot\nchapter introduces R RStudio ‚Äôll using throughout course learn statistical concepts analyse real data. Often, R RStudio confused. However, : R name programming language RStudio -called integrated development interface (IDE), development environment make life easier.","code":""},{"path":"introduction-to-r-and-rstudio.html","id":"what-is","chapter":"1 Introduction to R and RStudio","heading":"1.1 What is ?","text":"R programming language data analysis statistical modelling. free (open-source software) belongs, together Python, popular programming languages data analysis. R introduced Ross Ihaka Robert Gentleman 1996 (Ihaka Gentleman 1996). many additional packages, extend functionality.can install R computer official R webpage. short installation instruction list packages course can found ILIAS. Additionally, can refer Ismay Kim (2021), Chapter 1. find packages R‚Äôs official webpage CRAN (Comprehensive R Archive Network). packages released CRAN. However, beginning good idea use CRAN find install packages.Packages sometimes organized topics, can explore via CRAN Task Views. environmental statistics, following topics relevant:Environmetrics: analysis environmental dataMultivariate: multivariate statisticsSpatial: analysis spatial dataTimeSeries: time series analysis.","code":""},{"path":"introduction-to-r-and-rstudio.html","id":"what-is-rstudio","chapter":"1 Introduction to R and RStudio","heading":"1.2 What is RStudio?","text":"RStudio Desktop IDE R (languages). can download install open-source version computer . RStudio interface split four main areas (Figure 1.1).top left, type commands text. focus course reproducible research, start using R Markdown next session.panel bottom left console R executes commands. proper R system. start RStudio, standard R text displayed inform R open source, version useful things.panel upper right contains workspace, .e.¬†objects generated working session R. Additionally, find history commands .panel bottom right show plots (case working simple scripts RMarkdown files). tab ‚ÄúFiles‚Äù helps browse files.\nFigure 1.1: RStudio interface\n","code":""},{"path":"introduction-to-r-and-rstudio.html","id":"organize-your-work","chapter":"1 Introduction to R and RStudio","heading":"1.3 Organize your work","text":"better organize files, create subfolders data, scripts notebooks main folder.","code":""},{"path":"introduction-to-r-and-rstudio.html","id":"practice-on-your-own","chapter":"1 Introduction to R and RStudio","heading":"1.4 Practice on your own!","text":"start exercises 6.1.1 6.1.2 class. Finish exercises produce first plot exercise 6.1.3 üòÑ. need type comments answer text, don‚Äôt forget use comment sign # beginning text line. Otherwise, R misinterpret text commands try execute .\nRemember save R script regularly! Click save button \nupper left-hand corner window hit Stg+s.\n","code":""},{"path":"introduction-to-r-and-rstudio.html","id":"turning-in-your-work","chapter":"1 Introduction to R and RStudio","heading":"1.5 Turning in your work","text":"Save R script *.R file.Upload *.R file ILIAS. find upload option today‚Äôs session.receive solution file upload.\nsure upload deadline!\n","code":""},{"path":"introduction-to-r-and-rstudio.html","id":"reading-assignment","chapter":"1 Introduction to R and RStudio","heading":"1.6 Reading assignment","text":"Chapters 1.1 1.2 Ismay Kim (2021)","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"using-r-markdown-for-reproducible-research","chapter":"2 Using R Markdown for reproducible research","heading":"2 Using R Markdown for reproducible research","text":"\nOpening saving R Notebook\n\nBasic layout R Markdown\n","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"reproducibility-in-research","chapter":"2 Using R Markdown for reproducible research","heading":"2.1 Reproducibility in research","text":"Usually, analysing data generating report two separate tasks. First, analyse data (hopefully R üòÑ), describe methods, results conclusions text document. However, procedure error-prone reproducible. copy-paste results R tables include figures word processor. connection analysis code, results report lost.Donald Knuth, creator TEX, suggested idea literate programming, analysis code report combined one document (Knuth 1984). kind document human-centred allows better understand analysis. helps generate completely reproducible data analyses.","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"combining-code-and-report-in-one-document","chapter":"2 Using R Markdown for reproducible research","heading":"2.2 Combining code and report in one document","text":"use R Markdown combine analysis code report one reproducible document. general, R Markdown can produce different output documents (html, word, pdf, slides). However, course concentrate html output use -called R Notebooks (mostly).","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"create-a-new-r-notebook","chapter":"2 Using R Markdown for reproducible research","heading":"2.2.1 Create a new R Notebook","text":"create new R Notebook, click little green plus click File upper left hand select R Notebook image . Save notebook subfolder notebooks.\nFigure 2.1: create new R Notebook\ncontrast new R script, new notebook template text example R code grey boxes called chunks. look template text. provides basic example layout R code chunks.","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"customize-the-header","chapter":"2 Using R Markdown for reproducible research","heading":"2.2.2 Customize the header","text":"Every R Markdown document starts header. enclosed two lines --- signs. Inside header, find (blue) keywords like title: output:. Let‚Äôs customize header needs:Change title top ‚ÄúGetting know R Notebooks‚Äù. sure keep quotation marks.Change title top ‚ÄúGetting know R Notebooks‚Äù. sure keep quotation marks.Add author line put name quotation marks.Add author line put name quotation marks.Additionally, might want add date. syntax date: \"date \".","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"structure-your-notebook","chapter":"2 Using R Markdown for reproducible research","heading":"2.2.3 Structure your notebook","text":"Structure headers subheaders helps orginze content ideas. add header, put # followed header title. sure include space # text! subheader produced ## subsubheader ###. sure include space header text!Delete template text structure notebook. final result look something like :\nFigure 2.2: R Notebook\n","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"preview","chapter":"2 Using R Markdown for reproducible research","heading":"2.2.4 Preview","text":"Notebooks great advantage offer preview work. Just click Preview button. preview refreshed every time save notebook.Inspect preview notebook see formatting headers subheaders affects output. layout elements, experiment exercises.","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"other-output-options","chapter":"2 Using R Markdown for reproducible research","heading":"2.2.5 Other output options","text":"can also produce different outputs R Notebook normal R Markdown file supports different output formats. However, produce .html output, Preview button disappear! bring back, need edit header R Notebook file output: html_notebook.\nNote now R Notebook file (.Rmd) \nhtml file (nb.html) Notebooks\nfolder.\n","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"entering-and-running-commands","chapter":"2 Using R Markdown for reproducible research","heading":"2.3 Entering and running commands","text":"contrast text, headings etc. R code typed special boxes called chunks. create empty chunk type code, click little green C top type Str + Alt + . international keyboard, Str equals Control Mac Command key.Using first code chunk, type following command create new variable called x value 42.Remember arrow <- assignment operator. generates (overwrites, already exists) object x assigns value 42.\nNote direction arrow! points value \nobject name.\nRun command console, can either:click green triangle code chunk right orhighlight code chunk hit Str + Enter (R script).\nNote now new object workspace, called x!\n\nFigure 2.3: Global environment contains variable x now\n","code":"\nx <- 42"},{"path":"using-r-markdown-for-reproducible-research.html","id":"a-brief-recap-of-data-types","chapter":"2 Using R Markdown for reproducible research","heading":"2.4 A brief recap of data types","text":"created numeric variable x. However, restricted numbers. R can also handle types objects, like characters, example. tell R want generate variable containing characters contrast numbers, need enclose assigned content quotes.Create following chunk notebook let run.generate complicated object, namely numeric vector, use command c() concatenate several numbers.Note Environment pane vector v contains numbers (listed num). information [1:3] shows vector three elements, indexed 1 3. Indices indicate place element vector. access change particular element, use index likeNow second element vector equals 4.5. Remember R warn changing objects!can calculate objects can numbers. Let‚Äôs divide evely single element v 2.","code":"\nday_of_week <- \"Sunday\"\nv <- c(4.5, 6.234, 10)\nv[2] <- 4.5\nv / 2"},{"path":"using-r-markdown-for-reproducible-research.html","id":"practice-on-your-own-1","chapter":"2 Using R Markdown for reproducible research","heading":"2.5 Practice on your own!","text":"work exercises, please structure R Notebook e.g.¬†headers subheaders exercise. exercises require code explanation!\nRemember save work go along! Click save button \nupper left hand corner R Markdown window.\nAnswer following code code chunk (text necessary). Remember code just instructions R. need run code chunk make R execute instructions!\nCreate variable called y value 13.\nMultiply x y, store answer variable named z like : z <- x * y\nnow see day_of_week, x, v, y, z Environment pane.\nAnswer following code code chunk (text necessary). Remember code just instructions R. need run code chunk make R execute instructions!Create variable called y value 13.Multiply x y, store answer variable named z like : z <- x * yYou now see day_of_week, x, v, y, z Environment pane.Run following mathematical operation code chunk: 6 + 3.\nanswer appear?\nRun following mathematical operation code chunk: 6 + 3.answer appear?Now add code chunk, save results 6 + 3 variable called .\nanswer appear?\nobject show ?\nNext type code chunk re-run code chunk. happens?\nNow add code chunk, save results 6 + 3 variable called .answer appear?object show ?Next type code chunk re-run code chunk. happens?Run following command new code chunk. ^2.\n^ operator ?\nRun following command new code chunk. ^2.^ operator ?Type following command new code chunk. sum(, x, y)\nsum function. Based output, think sum function ?\nType following command new code chunk. sum(, x, y)sum function. Based output, think sum function ?Click little broom icon upper right hand corner Environment pane. Click yes window opens.\nhappened?\nClick little broom icon upper right hand corner Environment pane. Click yes window opens.happened?Go Run button top right R Markdown pane, choose Run (last option)\nhappened?\nGo Run button top right R Markdown pane, choose Run (last option)happened?Recall vector v created earlier. Copy, paste run following code chunk. code accomplish?\nv + 2\nRecall vector v created earlier. Copy, paste run following code chunk. code accomplish?\nv + 2\nCopy, paste, run following code make vector called music, contains music genres. Recall vector data object multiple elements type. data type character. Look environment pane. R tell us vector contains characters, numbers?\nmusic <- c(\"bluegrass\", \"funk\", \"folk\")\nCopy, paste, run following code make vector called music, contains music genres. Recall vector data object multiple elements type. data type character. Look environment pane. R tell us vector contains characters, numbers?\nmusic <- c(\"bluegrass\", \"funk\", \"folk\")\nNow let‚Äôs practice basic formatting. Using formatting tips page figure put following lab report. can get typed white section, text goes. Hint: put line! hit hard return line text.\nItalicize like \nBold like \n\nsuperscript: R2Now let‚Äôs practice basic formatting. Using formatting tips page figure put following lab report. can get typed white section, text goes. Hint: put line! hit hard return line text.\nItalicize like \nBold like \n\nsuperscript: R2","code":""},{"path":"using-r-markdown-for-reproducible-research.html","id":"turning-in-your-work-1","chapter":"2 Using R Markdown for reproducible research","heading":"2.6 Turning in your work","text":"Save R Notebook *.Rmd file.Upload R Notebook ILIAS. don‚Äôt need upload .nb.html file. find upload option today‚Äôs session.receive solution file upload. sure upload deadline!","code":""},{"path":"what-is-data.html","id":"what-is-data","chapter":"3 What is data?","heading":"3 What is data?","text":"\nInstall R package\n\nLoad installed data set\n\nExplore data set recognize type variables\nData can anything üòÑ. Usually, store data rectangular form, .e.¬†variables columns observations rows. two dedicated object formats store data, namely data.frame() tibble(). similar characteristics, however, tibble considered modern form data frame offers advantages (details later).chapter, look data set called palmerpenguins. provided dedicated package, let‚Äôs install package first.","code":""},{"path":"what-is-data.html","id":"installing-r-packages","chapter":"3 What is data?","heading":"3.1 Installing R packages","text":"Packages available official CRAN (Comprehensive R Archive Network) can installed function install.packages('name_of_the_package'). important provide name package quotes (single double).load package, use function library(name_of_the_package), time without quotes!","code":"\ninstall.packages('palmerpenguins')\nlibrary(palmerpenguins)"},{"path":"what-is-data.html","id":"welcome-the-penguins","chapter":"3 What is data?","heading":"3.2 Welcome the penguins!","text":"\nFigure 3.1: Artwork @allison_horst\npackage dedicated website really worth visiting. package contains two data sets, explore shorter one, called penguins. load data set installed package, use function data(\"name_of_data_set\"). sure put name data set quotes (single double).Let‚Äôs look object penguins.object tibble contains data set 344 rows 8 columns, meaning 8 variables measured 344 animals. first column contains variable species , guessed , shows species animal. variable -called factor (indicated <fct> species). means, contains categorical information certain number (usually small one) distinct values called levels. levels case areThe code uses $ sign access whole column (.e.¬†variable) data set. handy alternative square bracket method. syntax name_of_data_set$name_of_variable.also numerical variables tibble. numerical variable can continuous, e.g.¬†bill_length_mm (indicated <dbl> meaning double), meaning contains decimal numbers discrete, e.g.¬†year (indicated <int> meaning integer), meaning contains integers (whole numbers).summarize data set, can use function summary().","code":"\ndata(\"penguins\")\npenguins## # A tibble: 344 √ó 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # ‚Ä¶ with 334 more rows, and 2 more variables: sex <fct>, year <int>\nlevels(penguins$species)## [1] \"Adelie\"    \"Chinstrap\" \"Gentoo\"\nsummary(penguins)##       species          island    bill_length_mm  bill_depth_mm  \n##  Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n##  Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n##  Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n##                                  Mean   :43.92   Mean   :17.15  \n##                                  3rd Qu.:48.50   3rd Qu.:18.70  \n##                                  Max.   :59.60   Max.   :21.50  \n##                                  NA's   :2       NA's   :2      \n##  flipper_length_mm  body_mass_g       sex           year     \n##  Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n##  1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n##  Median :197.0     Median :4050   NA's  : 11   Median :2008  \n##  Mean   :200.9     Mean   :4202                Mean   :2008  \n##  3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n##  Max.   :231.0     Max.   :6300                Max.   :2009  \n##  NA's   :2         NA's   :2"},{"path":"what-is-data.html","id":"the-square-braces-revisited","chapter":"3 What is data?","heading":"3.3 The square braces revisited","text":"already know access certain position inside vector. tibble tow-dimensional object, rows columns. access particular measurement, need provide , row column index. following code picks value first row third column:","code":"\npenguins[1, 3]## # A tibble: 1 √ó 1\n##   bill_length_mm\n##            <dbl>\n## 1           39.1"},{"path":"what-is-data.html","id":"lets-look-at-them","chapter":"3 What is data?","heading":"3.4 Let‚Äôs look at them","text":"talk much data visualization later. now, just use code visualize relationship flipper length body mass animals.","code":"\nlibrary(ggplot2)\n\nggplot(data = penguins, mapping = aes(x = flipper_length_mm, y = body_mass_g, col = species)) +\n  geom_point() +\n  xlab('Flipper length (mm)') +\n  ylab('Body mass (g)')"},{"path":"what-is-data.html","id":"practice-on-your-own-2","chapter":"3 What is data?","heading":"3.5 Practice on your own!","text":"many categorical many numerical variables ? Consult help.many categorical many numerical variables ? Consult help.many Gentoo penguins present data set?many Gentoo penguins present data set?time span measurements?time span measurements?Find levels variable island.Find levels variable island.challenge ü§ì. Take code produced visualization flipper length body mass animals. Make educated guess change code produces visualization bill depth vs.¬†body mass. Can also guess adjust label \\(x\\)-axis?challenge ü§ì. Take code produced visualization flipper length body mass animals. Make educated guess change code produces visualization bill depth vs.¬†body mass. Can also guess adjust label \\(x\\)-axis?","code":""},{"path":"what-is-data.html","id":"reading-assignment-1","chapter":"3 What is data?","heading":"3.6 Reading assignment","text":"Chapter 1.3 Ismay Kim (2021).","code":""},{"path":"what-is-data.html","id":"turning-in-your-work-2","chapter":"3 What is data?","heading":"3.7 Turning in your work","text":"Save R Notebook *.Rmd file.Upload R Notebook ILIAS. don‚Äôt need upload .nb.html file. find upload option today‚Äôs session.receive solution file upload. sure upload deadline!","code":""},{"path":"what-is-data.html","id":"additional-reading","chapter":"3 What is data?","heading":"3.8 Additional reading","text":"case prefer flights penguins, can look data exploration Chapter 1.4 Ismay Kim (2021)","code":""},{"path":"import-visualize-and-explore-data.html","id":"import-visualize-and-explore-data","chapter":"4 Import, visualize and explore data","heading":"4 Import, visualize and explore data","text":"\nImport data R\n\nExplain general call function ggplot()\n\nPlot 5 frequently used types graphics\n","code":""},{"path":"import-visualize-and-explore-data.html","id":"data-import-from-text-files","chapter":"4 Import, visualize and explore data","heading":"4.1 Data import from text files","text":"import data set text file (e.g.¬†csv, .txt, .dat) R, use library readr part tydiverse. first load library.Let‚Äôs assume data stored folder data. case, change path accordingly. load data, can choose among several functions start read_. generic one read_delim() can specify columns separated (delimited) data file.Let‚Äôs look data. data set greenhouse gas emissions source sector EU downloaded eurostat 2021-04-30. contains greenhouse gas emissions CO2 equivalent, Mio tonnes, per vehicle type. database great source data reports üòÑ.result reading data function library readr always tibble. can see none variables factor. default behaviour readr. want variable coded factor transform manually, preferably functions package forcats.Let‚Äôs brief look data set.character variables, summary() count frequency different values. However, can get information function unique().data set contains measurements 33 EU countries. can also ask different types vehicle recorded.","code":"\nlibrary(tidyverse)\nemissions <- read_delim(file = 'data/emissions.csv', delim = ';')## Rows: 2871 Columns: 6\n## ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n## Delimiter: \";\"\n## chr  (4): unit, airpol, vehicle, geo\n## dbl  (1): values\n## date (1): time\n## \n## ‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n## ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nemissions## # A tibble: 2,871 √ó 6\n##    unit           airpol                         vehicle geo   time       values\n##    <chr>          <chr>                          <chr>   <chr> <date>      <dbl>\n##  1 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Aust‚Ä¶ 2018-01-01  14.4 \n##  2 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Belg‚Ä¶ 2018-01-01  14.4 \n##  3 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Bulg‚Ä¶ 2018-01-01   5.78\n##  4 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Swit‚Ä¶ 2018-01-01  11.0 \n##  5 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Cypr‚Ä¶ 2018-01-01   1.38\n##  6 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Czec‚Ä¶ 2018-01-01  11.9 \n##  7 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Germ‚Ä¶ 2018-01-01  97.8 \n##  8 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Denm‚Ä¶ 2018-01-01   6.85\n##  9 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Esto‚Ä¶ 2018-01-01   1.52\n## 10 Million tonnes Greenhouse gases (CO2, N2O in‚Ä¶ Fuel c‚Ä¶ Gree‚Ä¶ 2018-01-01   7.61\n## # ‚Ä¶ with 2,861 more rows\nsummary(emissions)##      unit              airpol            vehicle              geo           \n##  Length:2871        Length:2871        Length:2871        Length:2871       \n##  Class :character   Class :character   Class :character   Class :character  \n##  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n##                                                                             \n##                                                                             \n##                                                                             \n##                                                                             \n##       time                values         \n##  Min.   :1990-01-01   Min.   :  0.00609  \n##  1st Qu.:1997-01-01   1st Qu.:  0.25564  \n##  Median :2004-01-01   Median :  1.92403  \n##  Mean   :2004-01-01   Mean   :  8.52836  \n##  3rd Qu.:2011-01-01   3rd Qu.:  6.93899  \n##  Max.   :2018-01-01   Max.   :119.77824  \n##                       NA's   :232\nlength(unique(emissions$geo))## [1] 33\nunique(emissions$vehicle)## [1] \"Fuel combustion in cars\"                       \n## [2] \"Fuel combustion in heavy duty trucks and buses\"\n## [3] \"Fuel combustion in railways\""},{"path":"import-visualize-and-explore-data.html","id":"visualization-with-the-library-ggplot2","chapter":"4 Import, visualize and explore data","heading":"4.2 Visualization with the library ggplot2","text":"library ggplot2 powerful package data visualization. name comes grammar graphics hints systematic approach visualization. nutshell, ggplot2 defines statistical graphic follows:statistical graphic mapping variables data set aesthetic attributes geometric objects.ggplot2, graphic built step step, starting call core function ggplot(). specify following elements:data: data set containing variables visualized.data: data set containing variables visualized.aes: (aesthetic) attributes geometric object visualized. can x y variables, colour, shape, grouping variable etc.aes: (aesthetic) attributes geometric object visualized. can x y variables, colour, shape, grouping variable etc.geom: geometric object want plot, .e.¬†lines, points, bars, boxes etc.geom: geometric object want plot, .e.¬†lines, points, bars, boxes etc.","code":""},{"path":"import-visualize-and-explore-data.html","id":"line-plot","chapter":"4 Import, visualize and explore data","heading":"4.2.1 Line plot","text":"start line plot particularly suited time series. plotting 33 countries one graph much, first filter France emissions cars.call ggplot() prepares plotting area requested, show anything specify geometric object. geometric objects begin geom_. Every step building plot appended core call +.call can verbalized like following:Take data set emissions map following attributes:\n\\(x\\)-axis, variable time\n\\(y\\)-axis, variable values\nTake data set emissions map following attributes:\\(x\\)-axis, variable timeon \\(y\\)-axis, variable valuesPlot data line (geom_line())Plot data line (geom_line())order plot useful, label axes correctly (give title, figure caption shown). done adding function labs().","code":"\nemissions_france <- emissions %>% \n  filter(geo == 'France' & vehicle == 'Fuel combustion in cars')\nggplot(data = emissions_france, mapping = aes(x = time, y = values))\nggplot(data = emissions_france, mapping = aes(x = time, y = values)) +\n  geom_line()\nggplot(data = emissions_france, mapping = aes(x = time, y = values)) + \n  geom_line() +\n  labs(x = 'Time', y = 'Emissions (Mio tons)', title = 'Emissions in France')"},{"path":"import-visualize-and-explore-data.html","id":"point-plot","chapter":"4 Import, visualize and explore data","heading":"4.2.2 Point plot","text":"can add points plot geom_point(). Normally, wouldn‚Äôt time series, want show geom üòÑ.select two countries, aesthetic required distinguish time series. Let‚Äôs select France Italy.plot countries using different colours. Note (yet) select colours manually, specify variable used distinguish time series. colours chosen one country automatically.legend comes free! can change title legend setting colour = 'Country' call labs().","code":"\nggplot(data = emissions_france, mapping = aes(x = time, y = values)) + \n  geom_line() +\n  geom_point() +\n  labs(x = 'Time', y = 'Emissions (Mio tons)', title = 'Emissions in France')\nemissions_france_italy <- emissions %>% \n  filter(geo %in% c('France', 'Italy') & vehicle == 'Fuel combustion in cars')\nggplot(data = emissions_france_italy, mapping = aes(x = time, y = values, colour = geo)) + \n  geom_line() +\n  geom_point() +\n  labs(x = 'Time', y = 'Emissions (Mio tons)', title = 'Emissions in France and Italy', colour = 'Country')"},{"path":"import-visualize-and-explore-data.html","id":"histogram","chapter":"4 Import, visualize and explore data","heading":"4.3 Histogram","text":"Let‚Äôs look distribution emissions year 2018. filter data first.plot data histogram shows absolute frequencies data (.e.¬†many data points fall particular interval emissions). shows distribution continuous variable. histogram, specify x variable, frequencies calculated geom_histogram() directly. specify 25 bins (intervals). familiar kind statistical summaries, please look Appendix Ismay Kim (2021) read part .1.5 Distribution.","code":"\nemissions_2018 <- emissions %>% \n  filter(time == '2018-01-01')\nggplot(data = emissions_2018, mapping = aes(x = values)) +\n  geom_histogram(bins = 25)## Warning: Removed 8 rows containing non-finite values (stat_bin)."},{"path":"import-visualize-and-explore-data.html","id":"boxplot","chapter":"4 Import, visualize and explore data","heading":"4.4 Boxplot","text":"boxplot calculates prominent statistics data set plots form box ‚Äòwhiskers‚Äô (thus also called box--whiskers plot). Basically, calculating summary() (five-numbers: min, max, 25%, 50% 75% quantiles), figure. familiar kind statistical summaries, please look Appendix Ismay Kim (2021) read part .1.4 Five-number summary.Let‚Äôs look kind summary plot. emissions distributed year? convert time factor variable display data correctly (try happens don‚Äôt convert ).Hmmm, labels \\(x\\)-axis ugly. Let‚Äôs tune little (tuning later sessions).","code":"\nggplot(data = emissions, mapping = aes(x = factor(time), y = values)) +\n  geom_boxplot()## Warning: Removed 232 rows containing non-finite values (stat_boxplot).\nggplot(data = emissions, mapping = aes(x = factor(time), y = values)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 90))## Warning: Removed 232 rows containing non-finite values (stat_boxplot)."},{"path":"import-visualize-and-explore-data.html","id":"barplot","chapter":"4 Import, visualize and explore data","heading":"4.4.1 Barplot","text":"last geom want see geom_bar(). like know many data entries emissions contain per vehicle.Admittedly, boring plot üòÑ, number entries identical.","code":"\nggplot(data = emissions, mapping = aes(x = vehicle)) +\n  geom_bar()"},{"path":"import-visualize-and-explore-data.html","id":"practice-on-your-own-3","chapter":"4 Import, visualize and explore data","heading":"4.5 Practice on your own!","text":"histogram, boxplot barplot plotted labelled correctly. Correct axis labels find good titles graphs.histogram, boxplot barplot plotted labelled correctly. Correct axis labels find good titles graphs.Plot time series GDP data set gapminder France Germany. Filter data like :\nfrance_germany <- gapminder %>% filter(country %% c('France', 'Germany'))Plot time series GDP data set gapminder France Germany. Filter data like :\nfrance_germany <- gapminder %>% filter(country %% c('France', 'Germany'))Plot life expectancy vs.¬†GDP 2007, use data set gapminder. Pick code filtering data task 6.1.3. Use aesthetics colour size. educated guess change title legends (google üòÑ).Plot life expectancy vs.¬†GDP 2007, use data set gapminder. Pick code filtering data task 6.1.3. Use aesthetics colour size. educated guess change title legends (google üòÑ).GDP distributed Africa Europe 2007? Use data set gapminder. Filter data like :\nafrica_europe <- gapminder2007 %>% filter(continent %% c('Africa', 'Europe')).\n\nPlot data histogram use aesthetic fill instead colour distinguish continents.GDP distributed Africa Europe 2007? Use data set gapminder. Filter data like :\nafrica_europe <- gapminder2007 %>% filter(continent %% c('Africa', 'Europe')).\n\nPlot data histogram use aesthetic fill instead colour distinguish continents.GDP distributed different continents 2007? Use data set gapminder. Plot data boxplot.GDP distributed different continents 2007? Use data set gapminder. Plot data boxplot.many data points gapminder contain per continent? Visualize barplot.many data points gapminder contain per continent? Visualize barplot.","code":""},{"path":"import-visualize-and-explore-data.html","id":"reading-assignment-2","chapter":"4 Import, visualize and explore data","heading":"4.6 Reading assignment","text":"Chapter 2.1 Ismay Kim (2021)","code":""},{"path":"import-visualize-and-explore-data.html","id":"turning-in-your-work-3","chapter":"4 Import, visualize and explore data","heading":"4.7 Turning in your work","text":"Save R Notebook *.Rmd file.Upload R Notebook ILIAS. don‚Äôt need upload .nb.html file. find upload option today‚Äôs session.receive solution file upload. sure upload deadline!","code":""},{"path":"import-visualize-and-explore-data.html","id":"additional-reading-1","chapter":"4 Import, visualize and explore data","heading":"4.8 Additional reading","text":"Chapters 2.2 2.9 Ismay Kim (2021)","code":""},{"path":"tidyverse.html","id":"tidyverse","chapter":"5 Explorative workflow with tidyverse","heading":"5 Explorative workflow with tidyverse","text":"\nName core packages tidyverse\n\nApply simple explorative workflow (read, summarize, plot) \ntidyverse\n\nUse functions dplyr data wrangling\ntidyverse collection R packages data analysis (https://www.tidyverse.org/). shares common philosophy data structure grammar data manipulation visualisation. Although might sound like something alien, tidyverse regular part R functions can mixed base R functions.best introduction tidyverse r4ds: ‚ÄúR Data Science‚Äù (Wickham Grolemund 2021). can read free (https://r4ds..co.nz/).","code":""},{"path":"tidyverse.html","id":"core-packages","chapter":"5 Explorative workflow with tidyverse","heading":"5.1 Core packages","text":"tidyverse comprises 8 core packages installed call install.packages('tidyverse'):Every packages Cheat Sheet, overview functions. get package‚Äôs cheat sheet click name (https://www.tidyverse.org/packages/), scroll section Cheatsheet.Besides core packages, tidyverse also installes long list supplementary packages can find : https://www.tidyverse.org/packages/","code":""},{"path":"tidyverse.html","id":"exploratory-data-analysis","chapter":"5 Explorative workflow with tidyverse","heading":"5.2 Exploratory data analysis","text":"Exploratory data analysis important first step data analysis. using advanced statistical method, exploratory analysis must . comprises roughly following steps:import inspect dataclean (tidy) data necessarysummarize create new variables necessaryplot many different plots possible get good overview patterns data distribution","code":""},{"path":"tidyverse.html","id":"read-data-revisited","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.1 Read data, revisited","text":"load library tidyverse first.Last time used function read_delim() import data R. function general whole family functions, starting read_*: read_csv(), read_csv2() etc. parameters need verify respective help pages want use .exploratory data analysis use data German Meteo Service (Deutscher Wetterdienst) downloaded 2020-05-24 (https://www.dwd.de/DE/leistungen/klimadatendeutschland/klimadatendeutschland.html). data set contains hourly measurements relative air humidity (%) air temperature (¬∞C) three meteo stations, namely Hof, Frankfurt K√∂ln-Bonn. data named meteo.csv.read_delim() reports reading data variables recognizes. good hint spot possible problems. numerical variables read <dbl>? characters recognized <char> etc. code , parameter trim_ws = T removes leading zeroes.Let‚Äôs showr glimps data.data set contains following variables:read_* always returns tibble.","code":"\nlibrary(tidyverse)\ntemp_humid <- read_delim('data/meteo.csv', delim = ';',    trim_ws = T)## Rows: 39600 Columns: 6\n## ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n## Delimiter: \";\"\n## chr (1): eor\n## dbl (5): STATIONS_ID, MESS_DATUM, QN_9, TT_TU, RF_TU\n## \n## ‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n## ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\ntemp_humid## # A tibble: 39,600 √ó 6\n##    STATIONS_ID MESS_DATUM  QN_9 TT_TU RF_TU eor  \n##          <dbl>      <dbl> <dbl> <dbl> <dbl> <chr>\n##  1        2261 2018111900     3  -2.8    99 eor  \n##  2        2261 2018111901     3  -2.5   100 eor  \n##  3        2261 2018111902     3  -2.3   100 eor  \n##  4        2261 2018111903     3  -2     100 eor  \n##  5        2261 2018111904     3  -1.9    99 eor  \n##  6        2261 2018111905     3  -2.1    99 eor  \n##  7        2261 2018111906     3  -1.8    99 eor  \n##  8        2261 2018111907     3  -1.5    99 eor  \n##  9        2261 2018111908     3  -1.1    99 eor  \n## 10        2261 2018111909     3  -0.6    97 eor  \n## # ‚Ä¶ with 39,590 more rows\nclass(temp_humid)## [1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\""},{"path":"tidyverse.html","id":"date-and-time-made-easy","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.2 Date and time made easy","text":"useful package handle date time called lubridate. part core packages tidyverse installed long list additional packages. use convert variable MESS_DATUM real date-time variable.function ymd_h() converts character vectors date-time objects provided format year, month, day, hour. function different formats; consult help.conversion, variables recognised <dttm> date-time.","code":"\nlibrary(lubridate)\n\ntemp_humid$MESS_DATUM <- ymd_h(temp_humid$MESS_DATUM)\n\ntemp_humid## # A tibble: 39,600 √ó 6\n##    STATIONS_ID MESS_DATUM           QN_9 TT_TU RF_TU eor  \n##          <dbl> <dttm>              <dbl> <dbl> <dbl> <chr>\n##  1        2261 2018-11-19 00:00:00     3  -2.8    99 eor  \n##  2        2261 2018-11-19 01:00:00     3  -2.5   100 eor  \n##  3        2261 2018-11-19 02:00:00     3  -2.3   100 eor  \n##  4        2261 2018-11-19 03:00:00     3  -2     100 eor  \n##  5        2261 2018-11-19 04:00:00     3  -1.9    99 eor  \n##  6        2261 2018-11-19 05:00:00     3  -2.1    99 eor  \n##  7        2261 2018-11-19 06:00:00     3  -1.8    99 eor  \n##  8        2261 2018-11-19 07:00:00     3  -1.5    99 eor  \n##  9        2261 2018-11-19 08:00:00     3  -1.1    99 eor  \n## 10        2261 2018-11-19 09:00:00     3  -0.6    97 eor  \n## # ‚Ä¶ with 39,590 more rows"},{"path":"tidyverse.html","id":"summarize","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.3 Summarize","text":"three meteo station following IDs:want know many measurements per station data set contains.operator %>% called pipe pronounced . code temp_humid %>% group_by(STATIONS_ID) %>% count() can read : take object temp_humid, group STATIONS_ID count measurments group. pipe operator comes package magrittr (https://magrittr.tidyverse.org/). core operator tidyverse makes code readable easier follow humans. Perhaps beginning, soon ü§ì.","code":"\nstation_ids <-  c('2261' = 'Hof', '1420' = 'Frankfurt', '2667' = 'Koeln')\ntemp_humid %>% \n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 3 √ó 2\n## # Groups:   STATIONS_ID [3]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        1420 13200\n## 2        2261 13200\n## 3        2667 13200"},{"path":"tidyverse.html","id":"the-grammar-of-data-manipulation-dplyr","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.4 The grammar of data manipulation ‚Äì dplyr","text":"function count() part library dplyr, collection functions named verbs. Thus, easy imagine function üòÑ). 5 core functions :want know many measurements recorded particular meteo station, first filter ID:function filter() accepts logical tests. every row STATION_ID, == checks whether entry equals 2667. == logical operator means left side equals right sight. case, == returns TRUE otherwise returns FALSE. filter() selects rows TRUE returned. useful logical operators :logical boolean operators handeled tutorials (see ) help pages filter().can combine several test operator |, example. , want filter rows containing either ID 2667 ID 2261:can achieved excluding third station:alternative, can use operator %% checks whether row contains one entries vector.","code":"\ntemp_humid %>% \n  filter(STATIONS_ID == '2667') %>%\n  count()## # A tibble: 1 √ó 1\n##       n\n##   <int>\n## 1 13200\ntemp_humid %>% \n  filter(STATIONS_ID == '2667' | STATIONS_ID == '2261') %>%\n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 2 √ó 2\n## # Groups:   STATIONS_ID [2]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        2261 13200\n## 2        2667 13200\ntemp_humid %>% \n  filter(STATIONS_ID != '1420') %>%\n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 2 √ó 2\n## # Groups:   STATIONS_ID [2]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        2261 13200\n## 2        2667 13200\ntemp_humid %>% \n  filter(STATIONS_ID %in% c('2667', '2261')) %>%\n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 2 √ó 2\n## # Groups:   STATIONS_ID [2]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        2261 13200\n## 2        2667 13200"},{"path":"tidyverse.html","id":"visualize","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.5 Visualize","text":"plot time series use trick split along three different plots function facet_wrap(). needs variable separate data plots chose STATIONS_ID. splitting variable must preceeded ~.","code":"\nggplot(data = temp_humid, aes(x = MESS_DATUM, y = TT_TU)) + \n  geom_line() +\n  facet_wrap(~STATIONS_ID, nrow = 3) +\n  labs(x = 'Time', y = 'Temperature (¬∞C)')"},{"path":"tidyverse.html","id":"create-new-variables-with-mutate","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.6 Create new variables with mutate()","text":"want calculate monthly means standard deviations air temperature humidity. First, need generate temporal information, namely year month used group temperature values calculate mean() sd(). can achieved functions year()month() library lubridate. function mutate() can create new variables data object.next step, create new data set calculate means standard deviations. order get station, year month, group data accordingly. group several variables, just enumerate comma (quotation c() necessary).new object monthly_means grouped tibble, indicated grouped_df output str() shows structure object.calculations better done ungrouped data. Therefore, remove grouping. change data .plot monthly data, need proper monthly date object. attribute monthly means first respective month. , lubridate helps task. function parse_dat_time() genral function taking character string returning date-time object. need ‚Äúglue‚Äù variables year month together paste0() (yes, zero, O!) form string specify orders = 'ym', .e.¬†year month. Finally, relocate() new variable year_month variable year convenience (, created last varialbe data set).Now, can plot mean air temperature.can also visualise standard deviations.use semi-transparent band show variability (standard deviation).One last detail. titles top facets show station IDs. employee German Meteo Service, probably know hart. better use city names. vector station_ids called named vector right structure change titles facets: assignes every id city name, .e.¬†2261 = ‚ÄòHof‚Äô.use station_ids change titles:","code":"\ntemp_humid <- temp_humid %>% \n  mutate(year = year(MESS_DATUM),\n         month = month(MESS_DATUM))\n\ntemp_humid## # A tibble: 39,600 √ó 8\n##    STATIONS_ID MESS_DATUM           QN_9 TT_TU RF_TU eor    year month\n##          <dbl> <dttm>              <dbl> <dbl> <dbl> <chr> <dbl> <dbl>\n##  1        2261 2018-11-19 00:00:00     3  -2.8    99 eor    2018    11\n##  2        2261 2018-11-19 01:00:00     3  -2.5   100 eor    2018    11\n##  3        2261 2018-11-19 02:00:00     3  -2.3   100 eor    2018    11\n##  4        2261 2018-11-19 03:00:00     3  -2     100 eor    2018    11\n##  5        2261 2018-11-19 04:00:00     3  -1.9    99 eor    2018    11\n##  6        2261 2018-11-19 05:00:00     3  -2.1    99 eor    2018    11\n##  7        2261 2018-11-19 06:00:00     3  -1.8    99 eor    2018    11\n##  8        2261 2018-11-19 07:00:00     3  -1.5    99 eor    2018    11\n##  9        2261 2018-11-19 08:00:00     3  -1.1    99 eor    2018    11\n## 10        2261 2018-11-19 09:00:00     3  -0.6    97 eor    2018    11\n## # ‚Ä¶ with 39,590 more rows\nmonthly_means <- temp_humid %>%\n  group_by(STATIONS_ID, year, month) %>% \n  summarize(mean_T = mean(TT_TU), mean_RH = mean(RF_TU),\n            sd_T = sd(TT_TU), sd_RH = sd(RF_TU))## `summarise()` has grouped output by 'STATIONS_ID', 'year'. You can override\n## using the `.groups` argument.\nmonthly_means## # A tibble: 57 √ó 7\n## # Groups:   STATIONS_ID, year [9]\n##    STATIONS_ID  year month mean_T mean_RH  sd_T sd_RH\n##          <dbl> <dbl> <dbl>  <dbl>   <dbl> <dbl> <dbl>\n##  1        1420  2018    11   4.00    79.7  1.82  9.96\n##  2        1420  2018    12   4.73    83.7  4.20 11.7 \n##  3        1420  2019     1   2.12    79.3  3.76 10.0 \n##  4        1420  2019     2   4.48    74.1  4.69 17.7 \n##  5        1420  2019     3   8.28    68.5  4.08 16.1 \n##  6        1420  2019     4  11.7     61.0  5.52 21.8 \n##  7        1420  2019     5  12.7     67.5  4.64 20.1 \n##  8        1420  2019     6  21.4     60.6  6.05 21.2 \n##  9        1420  2019     7  21.6     55.6  5.90 21.8 \n## 10        1420  2019     8  20.7     65.6  4.94 20.8 \n## # ‚Ä¶ with 47 more rows\nstr(monthly_means)## grouped_df [57 √ó 7] (S3: grouped_df/tbl_df/tbl/data.frame)\n##  $ STATIONS_ID: num [1:57] 1420 1420 1420 1420 1420 1420 1420 1420 1420 1420 ...\n##  $ year       : num [1:57] 2018 2018 2019 2019 2019 ...\n##  $ month      : num [1:57] 11 12 1 2 3 4 5 6 7 8 ...\n##  $ mean_T     : num [1:57] 4 4.73 2.12 4.48 8.28 ...\n##  $ mean_RH    : num [1:57] 79.7 83.7 79.3 74.1 68.5 ...\n##  $ sd_T       : num [1:57] 1.82 4.2 3.76 4.69 4.08 ...\n##  $ sd_RH      : num [1:57] 9.96 11.68 10.04 17.73 16.1 ...\n##  - attr(*, \"groups\")= tibble [9 √ó 3] (S3: tbl_df/tbl/data.frame)\n##   ..$ STATIONS_ID: num [1:9] 1420 1420 1420 2261 2261 ...\n##   ..$ year       : num [1:9] 2018 2019 2020 2018 2019 ...\n##   ..$ .rows      : list<int> [1:9] \n##   .. ..$ : int [1:2] 1 2\n##   .. ..$ : int [1:12] 3 4 5 6 7 8 9 10 11 12 ...\n##   .. ..$ : int [1:5] 15 16 17 18 19\n##   .. ..$ : int [1:2] 20 21\n##   .. ..$ : int [1:12] 22 23 24 25 26 27 28 29 30 31 ...\n##   .. ..$ : int [1:5] 34 35 36 37 38\n##   .. ..$ : int [1:2] 39 40\n##   .. ..$ : int [1:12] 41 42 43 44 45 46 47 48 49 50 ...\n##   .. ..$ : int [1:5] 53 54 55 56 57\n##   .. ..@ ptype: int(0) \n##   ..- attr(*, \".drop\")= logi TRUE\nmonthly_means <- ungroup(monthly_means)\nmonthly_means <- monthly_means %>%\n  mutate(year_month = parse_date_time(paste0(year, month), orders = 'ym', tz = 'CET')) %>% \n  relocate(year_month, .before = year)\n\nmonthly_means## # A tibble: 57 √ó 8\n##    STATIONS_ID year_month           year month mean_T mean_RH  sd_T sd_RH\n##          <dbl> <dttm>              <dbl> <dbl>  <dbl>   <dbl> <dbl> <dbl>\n##  1        1420 2018-11-01 00:00:00  2018    11   4.00    79.7  1.82  9.96\n##  2        1420 2018-12-01 00:00:00  2018    12   4.73    83.7  4.20 11.7 \n##  3        1420 2019-01-01 00:00:00  2019     1   2.12    79.3  3.76 10.0 \n##  4        1420 2019-02-01 00:00:00  2019     2   4.48    74.1  4.69 17.7 \n##  5        1420 2019-03-01 00:00:00  2019     3   8.28    68.5  4.08 16.1 \n##  6        1420 2019-04-01 00:00:00  2019     4  11.7     61.0  5.52 21.8 \n##  7        1420 2019-05-01 00:00:00  2019     5  12.7     67.5  4.64 20.1 \n##  8        1420 2019-06-01 00:00:00  2019     6  21.4     60.6  6.05 21.2 \n##  9        1420 2019-07-01 00:00:00  2019     7  21.6     55.6  5.90 21.8 \n## 10        1420 2019-08-01 00:00:00  2019     8  20.7     65.6  4.94 20.8 \n## # ‚Ä¶ with 47 more rows\nggplot(data = monthly_means, aes(x = year_month, y = mean_T, col = factor(STATIONS_ID))) + \n  geom_line() + \n  labs(x = 'Time', y = 'Temperature (¬∞C)', color = 'Meteo station')\nggplot(monthly_means, aes(x = year_month, y = mean_T, ymin = mean_T - sd_T, ymax = mean_T + sd_T)) +\n  geom_errorbar() +\n  geom_point() +\n  facet_wrap(~STATIONS_ID, nrow = 3) + \n  labs(x = 'Time', y = 'Temperature (¬∞C)')\nggplot(monthly_means, aes(x = year_month, y = mean_T, ymin = mean_T - sd_T, ymax = mean_T + sd_T)) +\n  geom_ribbon(alpha = 0.5) +\n  geom_line() +\n  facet_wrap(~STATIONS_ID, nrow = 3) + \n  labs(x = 'Time', y = 'Temperature (¬∞C)')\nstation_ids##        2261        1420        2667 \n##       \"Hof\" \"Frankfurt\"     \"Koeln\"\nggplot(monthly_means, aes(x = year_month, y = mean_T, ymin = mean_T - sd_T, ymax = mean_T + sd_T)) +\n  geom_ribbon(alpha = 0.5) +\n  geom_line() +\n  facet_wrap(~STATIONS_ID, nrow = 3, labeller = labeller(STATIONS_ID = station_ids)) + \n  labs(x = 'Time', y = 'Temperature (¬∞C)')"},{"path":"tidyverse.html","id":"practice-on-your-own-4","chapter":"5 Explorative workflow with tidyverse","heading":"5.3 Practice on your own!","text":"Plot means standard deviations air humidity instead air temperature.Plot means standard deviations air humidity instead air temperature.tutorials ‚ÄúWork data‚Äù Primers collection RStudio Cloud. can access tutorials : https://rstudio.cloud/learn/primers/2Do tutorials ‚ÄúWork data‚Äù Primers collection RStudio Cloud. can access tutorials : https://rstudio.cloud/learn/primers/2Do tutorials ‚ÄúVisualize Data‚Äù Primers collection RStudio Cloud. can access tutorials :https://rstudio.cloud/learn/primers/3Do tutorials ‚ÄúVisualize Data‚Äù Primers collection RStudio Cloud. can access tutorials :https://rstudio.cloud/learn/primers/3","code":""},{"path":"tidyverse.html","id":"reading-assignment-3","chapter":"5 Explorative workflow with tidyverse","heading":"5.4 Reading assignment","text":"Read chapter 3 (3.5) Ismay Kim (2021)","code":""},{"path":"tidyverse.html","id":"additional-reading-and-videos","chapter":"5 Explorative workflow with tidyverse","heading":"5.5 Additional reading and videos","text":"information statistical graphical summaries geoms: R4DS Wickham Grolemund (2021): Chapter 5 ‚ÄúData transformation‚Äùinformation statistical graphical summaries geoms: R4DS Wickham Grolemund (2021): Chapter 5 ‚ÄúData transformation‚Äùlive exploratory data analysis main author tidyverse, Hadley Wickham. Really informative, Dr.¬†Wickham types fast üòÑ.live exploratory data analysis main author tidyverse, Hadley Wickham. Really informative, Dr.¬†Wickham types fast üòÑ.","code":""},{"path":"additional-exercises.html","id":"additional-exercises","chapter":"6 Additional exercises","heading":"6 Additional exercises","text":"","code":""},{"path":"additional-exercises.html","id":"introduction-to-r-and-rstudio-1","chapter":"6 Additional exercises","heading":"6.1 Introduction to R and RStudio","text":"","code":""},{"path":"additional-exercises.html","id":"rob1","chapter":"6 Additional exercises","heading":"6.1.1 Rob‚Äôs account book","text":"young master student Rob Stat thinks seriously mother‚Äôs advice monitor expenses. begins writing spends week Mensa:\nTable 6.1: Rob‚Äôs account book\nGenerate vector Rob‚Äôs expenses assign variable expenses. Use function c() use numeric expenses , days week.much Rob spend week? Use function sum().Rob seems spent smallest amount Tuesday. much spent paid much every day week? Use array notation square brackets.Unfortunately, Rob misspelled amount Tuesday. Actually, invited girl friend lunch paid 7.95 ‚Ç¨ instead 2.90 ‚Ç¨.Correct Rob‚Äôs typo.result change?","code":""},{"path":"additional-exercises.html","id":"rob2","chapter":"6 Additional exercises","heading":"6.1.2 Missing values","text":"R codes missing values NA. Rob ate Mensa last Monday, forgot write amount.\nTable 6.2: Rob‚Äôs account book, cont.\nNA change calculated sum?Read happens data contains NAs calling help sum, .e.¬†type ?sum R console.Correct call sum() accordingly.","code":""},{"path":"additional-exercises.html","id":"firstplot","chapter":"6 Additional exercises","heading":"6.1.3 Your very first plot","text":"particular beginning learning R forget . R really beautiful want analyse learn real data.Even don‚Äôt fully understand following code, just copy paste .R file let run!data set . Use help like ?gapminder.colours represent?size circles represent?describe relationship GDP per capita Life expectancy?","code":"\nlibrary(tidyverse)\nlibrary(gapminder)\n\ngapminder2007 <- gapminder %>% \n  filter(year == 2007)\n\nggplot(gapminder2007, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  xlab('GDP per capita') +\n  ylab('Life expectancy') +\n  labs(title = 'Gapminder data for the year 2007')"},{"path":"additional-exercises.html","id":"the-big-practical-importing-wrangling-summerizing-and-plotting","chapter":"6 Additional exercises","heading":"6.2 The big practical: importing, wrangling, summerizing and plotting","text":"","code":""},{"path":"additional-exercises.html","id":"temperature-along-the-dutch-coast","chapter":"6 Additional exercises","heading":"6.2.1 Temperature along the Dutch coast","text":"file Temperatur.csv book Zuur, Ieno, Meesters (2009) contains measurements temperature, salinity content chlorophyll 31 locations along Dutch coast. can download data set . data provided Dutch institute RIKZ (monitoring program MWTL: Monitoring Waterstaatkundige Toestand des Lands), measured 1990 2005 0 4 times per month depending season.Read file Temperatur.csv R.Convert column Date proper date format. Use library lubridate.Calculate number measurements, mean standard deviations temperature per monitoring station. Hint: use n() inside summarize() get number measurements.Calculate number measurements, mean standard deviations temperature per month.Plot mean monthly temperature line add standard deviation band around .Label axis appropriately.Save graph pdf file.","code":""},{"path":"additional-exercises.html","id":"temperature-along-the-dutch-coast-revisited","chapter":"6 Additional exercises","heading":"6.2.2 Temperature along the Dutch coast, revisited","text":"Calculate monthly means standard deviations per monitoring station. Hint group_by(Station, Month).Plot means error band different plots. Hint: use facet_wrap()).Save graph pdf file.","code":""},{"path":"additional-exercises.html","id":"excel-data-turns-tidy","chapter":"6 Additional exercises","heading":"6.2.3 Excel data turns tidy","text":"import tidy World Development Indicators data downloaded World Bank 2021-06-09 20 countries. extract data available.exercise show load excel data directly without converting .csv file. format data typical non-tidy one wrangle tidy tibble. file called Data_Extract_From_World_Development_Indicators.xlsx.goal exercise learn read data excel file using tidyverse functions. use library readxl function read_xlsx() reading files. Read help pages read_xlsx(), find set parameter reading particular table sheet correctly.Open excel sheet look data carefully. NAs coded? data sheet need read?Read excel file R. Call wdi.data set tidy. particular, year coded column name. column names contain year twice, number [YR NUMBER]. rename columns first.code mean? Read help pages functions rename_with(), str_sub() starts_with().Pivot data set tidy format: variables columns measurements rows. Use pivot_longer.code mean? Read help pages functions pivot_longer() .numeric().\nnecessary convert year .numeric()?Filter indicator GDP (current US$) plot data time series. Hint: can also filter indicator‚Äôs code; look excel file. Label axis appropriately.","code":"\nwdi <- wdi %>% \n  rename_with(.fn = function(x) str_sub(x, start = 1, end = 4), .cols = starts_with('20'))\nwdi <- wdi %>%\n  pivot_longer(names_to = 'year', values_to = 'indicator_value', cols = starts_with('20')) %>% \n  mutate(year = as.numeric(year))\n\nwdi"},{"path":"additional-exercises.html","id":"the-big-practical-statistical-inference","chapter":"6 Additional exercises","heading":"6.3 The big practical: statistical inference","text":"","code":""},{"path":"additional-exercises.html","id":"species-richness-in-grasslands","chapter":"6 Additional exercises","heading":"6.3.1 Species richness in grasslands","text":"work grassland species monitoring data Yellowstone National Park provided Zuur, Ieno, Meesters (2009) Sikkink et al. (2007). can download data set . researchers monitored changes grassland communities time related environmental factors. Biodiversity expressed number different species per site (variable R). Approximately 90 species identified 8 transects monitoring campaigns repeated every 4 10 years, resulting 58 observations. data saved file Vegetation2.xls.Read data explore structure. Describe type variables. type correspond expectation respective variable? Remember set name table sheet want read read_xls().Read data explore structure. Describe type variables. type correspond expectation respective variable? Remember set name table sheet want read read_xls().Short explorative data analysis: calculate number measurements, mean standard deviations species number R per transect.Short explorative data analysis: calculate number measurements, mean standard deviations species number R per transect.Plot species number versus variable BARESOIL (proportion bare soil). Colour dots transect. Hint: convert transect as_factor().Plot species number versus variable BARESOIL (proportion bare soil). Colour dots transect. Hint: convert transect as_factor().Add smoothing line without confidence band (geom_smooth(se = FALSE)) points independently transect. might want consult Section 4.2 book ggplot2 (Wickham 2020). Hint: set colour aes geom_point() instead ggplot().Add smoothing line without confidence band (geom_smooth(se = FALSE)) points independently transect. might want consult Section 4.2 book ggplot2 (Wickham 2020). Hint: set colour aes geom_point() instead ggplot().Add labels graph assign object.Add labels graph assign object.Plot species number time series transect. Add , points lines. size points reflect proportion bare soil. might want consult Section 12.1 book ggplot2 (Wickham 2020). Think set aesthetic size order scale points .Plot species number time series transect. Add , points lines. size points reflect proportion bare soil. might want consult Section 12.1 book ggplot2 (Wickham 2020). Think set aesthetic size order scale points .Add labels graph assign object.Add labels graph assign object.Put graphs side--side save pdf (ggsave()).Put graphs side--side save pdf (ggsave()).Calculate linear Pearson correlation coefficient species number proportion bare soil. Calculate 95% confidence interval. Use framework infer.Calculate linear Pearson correlation coefficient species number proportion bare soil. Calculate 95% confidence interval. Use framework infer.calculate 90% confidence interval instead 95% confidence interval, confidence interval increase decrease? ?calculate 90% confidence interval instead 95% confidence interval, confidence interval increase decrease? ?","code":""},{"path":"additional-exercises.html","id":"soil-compaction","chapter":"6 Additional exercises","heading":"6.3.2 Soil compaction","text":"Heavy agricultural machines compact soil. randomized field trial, plots (variable plots) homogeneous agricultural field assigned randomly either control (control) treatment heavy agricultural machine used (compacted). Bulk density [g/cm¬≥] (mass dry soil divided soil volume) measured every plot. parameter soil structure can help spot soil compaction. data stored inbd_compaction.csv.Read data short explorative data analysis.bulk density increase due heavy machinery difference due chance? Use framework infer.Calculate effect size (difference means) 95% confidence interval.","code":""},{"path":"faq.html","id":"faq","chapter":"7 Frequently and not-so-frequently asked questions","heading":"7 Frequently and not-so-frequently asked questions","text":"","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)"},{"path":"faq.html","id":"what-is-the-difference-between-double-and-single-quotes","chapter":"7 Frequently and not-so-frequently asked questions","heading":"What is the difference between double \"\" and single '' quotes?","text":"difference. valid quote text/strings. Pay attention use quotes quotes like ‚Äúsolutions exercise ‚ÄòFind mean‚Äô‚Äù. quotes inside quotes must different (either ‚Äú‚Äù outside ‚Äô‚Äô inside way round). However, may rendered differently plain R R Markdown e.g.¬†title.","code":"\nprint('I am a text.')## [1] \"I am a text.\"\nprint(\"So am I.\")## [1] \"So am I.\"\nprint(\"I am a 'quote' in a text.\")## [1] \"I am a 'quote' in a text.\"\nprint('So am \"I\", but not so nice looking.')## [1] \"So am \\\"I\\\", but not so nice looking.\""},{"path":"faq.html","id":"when-do-we-use-the-pipe-operator-and-when-the-plus-sign-to-connect-lines-of-code","chapter":"7 Frequently and not-so-frequently asked questions","heading":"When do we use the pipe operator %>% and when the plus sign + to connect lines of code?","text":"pipe operator %>% used compose functions. Instead saving result every function passing result explicitly next function, can omit intermediate saving ‚Äúpipe‚Äù results :details pipes .plus sign + used operator ggplot2 , construct graph.","code":"\npenguins %>% \n  filter(species == 'Adelie') %>% \n  summarise(mean = mean(bill_length_mm, na.rm = TRUE))## # A tibble: 1 √ó 1\n##    mean\n##   <dbl>\n## 1  38.8\n# The same result, but not as tibble!\nfiltered_data <- filter(penguins, species == 'Adelie')\nmean(filtered_data$bill_length_mm, na.rm = TRUE)## [1] 38.79139\nggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm, col = species)) +\n  geom_point() +\n  geom_smooth(se = FALSE, method = lm)"},{"path":"literature-1.html","id":"literature-1","chapter":"Literature","heading":"Literature","text":"","code":""}]
