[{"path":"index.html","id":"preface","chapter":"Preface","heading":"Preface","text":"","code":""},{"path":"index.html","id":"online-teaching","chapter":"Preface","heading":"Online teaching","text":"\ncorona virus pandemic impacts lives changes way teach learn. course held online. Please patient activities turn successful technical tools function desired. best support curriculum.\ncourse, use following tools:ILIAS: moodle platform UoC. registered already.Campuswire: chat platform decrease number emails allow natural exchange participants lecturer. received invitation email, , send email, please.Zoom: used live presentations. Please check registration requirements ILIAS.RStudio Server Pro: server running R RStudio installation. working .","code":""},{"path":"index.html","id":"intended-learning-outcomes-ilos","chapter":"Preface","heading":"Intended learning outcomes (ILOs)","text":"end course able \nWrite simple R scripts data analysis.\n\nExplain statistical methods learnt course.\n\nApply statistical methods learnt course.\n\nApply selected methods new data set write report.\n","code":""},{"path":"index.html","id":"literature","chapter":"Preface","heading":"Literature","text":"using book ModernDive: Statistical Inference via Data Science (Ismay Kim 2021) mainly. Additionally, recommend time time R Data Science (Wickham Grolemund 2021) OpenIntro Statistics (Diez, Çetinkaya-Rundel, Barr 2019). report, additional literature search depending topic.","code":""},{"path":"index.html","id":"why-this-script","chapter":"Preface","heading":"Why this script","text":"document working live document updated course. comprehensive, help navigate introduction R statistics smoothly.use different colour boxes\nInfos tips\n\nimportant\n\nexample\n\nLearning outcomes, also single sessions\n","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Preface","heading":"Acknowledgements","text":"script based free material provided byModernDive: Ismay Kim (2021) free Problem Sets authored Jenny Smetzer, William Hopper, Albert Y. Kim, Chester Ismay (https://moderndive.github.io/moderndive_labs/index.html)ModernDive: Ismay Kim (2021) free Problem Sets authored Jenny Smetzer, William Hopper, Albert Y. Kim, Chester Ismay (https://moderndive.github.io/moderndive_labs/index.html)R Dtaa Science (r4ds): Wickham Grolemund (2021)R Dtaa Science (r4ds): Wickham Grolemund (2021)Data Sicence Box (https://datasciencebox.org/) free book Diez, Çetinkaya-Rundel, Barr (2019)Data Sicence Box (https://datasciencebox.org/) free book Diez, Çetinkaya-Rundel, Barr (2019)One thank people enough contribution  community !Credit: https://xkcd.com/2400/work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":""},{"path":"introduction-to-r-and-rstudio-server-pro.html","id":"introduction-to-r-and-rstudio-server-pro","chapter":"1 Introduction to R and RStudio Server Pro","heading":"1 Introduction to R and RStudio Server Pro","text":"\nLogin RStudio Server Pro\n\nUpload download files server\n\nUse R calculator\n\nCreate first objects R\n\nfirst plot\nchapter introduces R RStudio ’ll using throughout course learn statistical concepts analyse real data. clarify : R name programming language RStudio convenient development environment make life easier.Today begin fundamental building blocks R RStudio: interface, creating saving files, basic commands.","code":""},{"path":"introduction-to-r-and-rstudio-server-pro.html","id":"opening-rstudio-server-pro","chapter":"1 Introduction to R and RStudio Server Pro","heading":"1.1 Opening RStudio Server Pro","text":"work RStudio Server Pro, online R System. Thus, don’t need install R RStudio computer (yet). receive login password server. share credentials. case difficulties might need login RStudio Server account. allow , need sign agreement email .can login server, need activate VPN client. familiar VPN client, please visit website.login RStudio Server, click hier. copy address browser: https://cheops-rstudio-edu.rrz.uni-koeln.de:8787/auth-sign-.htm. logging , see home interface (Figure 1.1).\nFigure 1.1: RStudio Server Pro Home\nstart new session, click button New Session next R symbol choose following settings (can rename session wish):\nFigure 1.2: Starting new session\n","code":""},{"path":"introduction-to-r-and-rstudio-server-pro.html","id":"the-rstudio-interface","chapter":"1 Introduction to R and RStudio Server Pro","heading":"1.2 The RStudio interface","text":"RStudio Server see window looks like Figure 1.3.\nFigure 1.3: RStudio interface\npanel left action happens. ’s called console. Every time launch RStudio, text top console telling version R ’re running.panel upper right contains workspace. shows variables objects define R session, history commands enter.plots generate show panel lower right corner. also can browse files, access help files, upload download files.","code":""},{"path":"introduction-to-r-and-rstudio-server-pro.html","id":"file-management","chapter":"1 Introduction to R and RStudio Server Pro","heading":"1.3 File management","text":"start making data folder RStudio Server can use store data sets. Click Files tab lower right panel, New Folder tab. Enter folder name data window opens, click OK. now new folder!Next, go course site, download file meteo.csv posted week’s session. Put location computer remember! highly suggest also make folder course data folder computer store material course.access files stored hard drive computer RStudio Server, need upload computer server. upload data set click RStudio Server data folder , click upload button, like :\nFigure 1.4: Upload files\nwindow opens, browse stored data set computer, click data file, click OK. Open data folder RStudio Server, make sure data . can upload sort file like .anything meteo.csv file, except learning upload .download file first mark (can mark several files) clicking little square left . , click button > Export > Download (Figures 1.5 1.6). Save file(s) computer.\nFigure 1.5: Select files download\n\nFigure 1.6: Save files\n","code":""},{"path":"introduction-to-r-and-rstudio-server-pro.html","id":"practice-on-your-own","chapter":"1 Introduction to R and RStudio Server Pro","heading":"1.4 Practice on your own!","text":"complete problem set next run Exercises, submit R script (.e. .R file) answers Exercises. need type text, don’t forget use comment sign # typing text R misinterpret text commands.\nRemember save work go along! Click save button upper left hand corner window.\nstart exercises 6.1.1 6.1.2 class. Finish exercises produce first plot exercise 6.1.3 😄.","code":""},{"path":"introduction-to-r-and-rstudio-server-pro.html","id":"turning-in-your-work","chapter":"1 Introduction to R and RStudio Server Pro","heading":"1.5 Turning in your work","text":"Save R script download .R file computer.Upload .R file ILIAS. find upload option today’s session.receive solution file deadline.\nsure upload deadline!\n","code":""},{"path":"introduction-to-r-and-rstudio-server-pro.html","id":"logging-out-of-the-server","chapter":"1 Introduction to R and RStudio Server Pro","heading":"1.6 Logging out of the server","text":"classes students using server. keep fast possible, best sign done. follow steps closing R Markdown document :Save work, .e. R document.Click orange button far right corner screen quit R.Choose don’t save Workspace image.browser refreshes, can click button Sign next login top right.signed !","code":""},{"path":"introduction-to-r-and-rstudio-server-pro.html","id":"reading-assignment","chapter":"1 Introduction to R and RStudio Server Pro","heading":"1.7 Reading assignment","text":"Chapters 1.1. 1.2 Ismay Kim (2021)","code":""},{"path":"using-r-markdown.html","id":"using-r-markdown","chapter":"2 Using R Markdown","heading":"2 Using R Markdown","text":"\nOpening saving R Notebook\n\nBasic layout R Markdown\n","code":""},{"path":"using-r-markdown.html","id":"opening-a-new-r-notebook","chapter":"2 Using R Markdown","heading":"2.1 Opening a new R Notebook","text":"want write paper, open Word document type ideas , save work . R use document type called R Markdown document. R Markdown documents useful running code, annotating code comments. document can saved, can refer back code later, can used create document types (html, word, pdf, slides) presenting results analyses. R Markdown provides way generate clear reproducible statistical analyses.different types R Markdown documents. usually use R Notebook.open new R Notebook, click little green plus upper left hand select R Notebook image . can leave untitled.\nFigure 2.1: create new R Notebook\nopen new R Notebook, example code can get rid . take care next.","code":""},{"path":"using-r-markdown.html","id":"make-changes-to-a-file","chapter":"2 Using R Markdown","heading":"2.2 Make changes to a file","text":"Let’s make changes R Markdown file just opened. Using image guideFirst, change title top “Getting know R Notebooks.” sure keep quotation marks.Second, add author line, following example . need quotation marks!Third, delete everything document line 6 downwards.Fourth, add headers text, exactly following example .Finally, insert called “code chunk.” click insert button near top centre screen, choose R. greyed box shows type code.final result look like :\nFigure 2.2: R Notebook\n","code":""},{"path":"using-r-markdown.html","id":"saving-a-file","chapter":"2 Using R Markdown","heading":"2.3 Saving a file","text":"suggest create new folder Notebooks save R Notebooks.complete lab work R Notebook file like week, important learn save files.Click File > Save …Browse Notebooks course folder just createdName file: Session2_lastname_firstname (fill firstname lastname)Click saveThis now saved Notebooks folder server.","code":""},{"path":"using-r-markdown.html","id":"preview","chapter":"2 Using R Markdown","heading":"2.4 Preview","text":"Notebooks great advantage offer preview work. Just click Preview button. preview refreshed every time save notebook.","code":""},{"path":"using-r-markdown.html","id":"other-output-options","chapter":"2 Using R Markdown","heading":"2.5 Other output options","text":"can also produce different outputs R Notebook normal R Markdown file supports different output formats. However, produce .html output, Preview button disappear! bring back, need edit header R Notebook file output: html_notebook.\nNote now R Notebook file (.Rmd) html file (nb.html) Notebooks folder.\nInspect preview notebook see typed formatted. lots tricks controlling formatting knitted html file. instance:putting ## space front text makes large header. example, see ## header R Markdown .Rmd file translates resulting .html output.putting ### space front text makes smaller header!","code":""},{"path":"using-r-markdown.html","id":"entering-and-running-commands","chapter":"2 Using R Markdown","heading":"2.6 Entering and running commands","text":"code chunks put R code R Markdown file. far, preview doesn’t show anything, put content code chunks yet!Using first code chunk, type following command create new variable called x value 6.arrow <- called ASSIGNMENT OPERATOR, tells R save object called x value 6. similar saving value graphing calculator.\nNote whatever want save must always left assignment operator!!\nactually RUN command console, options:click green triangle code chunkhighlight code hit Control-Enter PC Command-Return MacThink “running” code console telling R “.”\nNote now new object workspace, called x!\n\nFigure 2.3: Global environment contains variable x now\n","code":"\nx <- 6"},{"path":"using-r-markdown.html","id":"a-brief-recap-of-data-types","chapter":"2 Using R Markdown","heading":"2.7 A brief recap of data types","text":"far made numeric variable x. many types data objects can make R.First, copy, paste run following command new code chunk make character called favorite_movie. Think characters text opposed numerical values. Note told R character putting quotation marks around Star_Wars.Next, copy, paste run following command new code chunk.makes called vector, named v. data object multiple elements type. vector contains three numbers, 2, 4, 6. c() function says r concatenate values 2, 4, 6, single vector. Note Environment pane vector v contains numbers (listed num).can math vector contains numbers! instance, copy, paste run following command new code chunk. tells R multiply element vector v 3.","code":"\nfavorite_movie <- \"Star_Wars\"\nv <- c(2, 4, 6)\nv * 3"},{"path":"using-r-markdown.html","id":"practice-on-your-own-1","chapter":"2 Using R Markdown","heading":"2.8 Practice on your own!","text":"complete problem set next run Exercises, submit R Notebook file answers Exercises. Please make header Exercises. need answer Exercise text, type text header, next line, white part, need answer Exercise code, insert code chunk header, put code greyed box.\nRemember save work go along! Click save button upper left hand corner R Markdown window.\nAnswer following code code chunk (text necessary). Remember code just instructions R. need run code chunk make R execute instructions!\nCreate variable called y value 7\nMultiply x y, store answer variable named z like : z <- x * y\nnow see favorite_movie, x, v, y, z Environment pane\nCreate variable called y value 7Multiply x y, store answer variable named z like : z <- x * yYou now see favorite_movie, x, v, y, z Environment paneRun following mathematical operation code chunk: 6 + 3\nanswer appear? (please answer text)\nRun following mathematical operation code chunk: 6 + 3Where answer appear? (please answer text)Now add code chunk, save results 6 + 3 variable called .\nanswer appear? (please answer text)\nobject show ? (please answer text)\nNext type code chunk re-run code chunk. happens? (please answer text)\nNow add code chunk, save results 6 + 3 variable called .answer appear? (please answer text)object show ? (please answer text)Next type code chunk re-run code chunk. happens? (please answer text)Run following command new code chunk. ^2.\n^ operator ? (please answer text)\nRun following command new code chunk. ^2.^ operator ? (please answer text)Type following command new code chunk. sum(, x, y)\nsum function. Based output, think sum function ? (please answer text)\nType following command new code chunk. sum(, x, y)sum function. Based output, think sum function ? (please answer text)Click little broom icon upper right hand corner Environment pane. Click yes window opens.\nhappened? (please answer text, don’t freak )\nClick little broom icon upper right hand corner Environment pane. Click yes window opens.happened? (please answer text, don’t freak )Go Run button top right R Markdown pane, choose Run (last option)\nhappened? (please answer text)\nGo Run button top right R Markdown pane, choose Run (last option)happened? (please answer text)Recall vector v created earlier. Copy, paste run following code chunk. code accomplish? (please answer text)Copy, paste, run following code make vector called music, contains music genres. Recall vector data object multiple elements type. data type character. Look environment pane. R tell us vector contains characters, numbers? (please answer text)Now let’s practice basic formatting. Using formatting tips page figure put following lab report. can get typed white section, text goes. Hint: put line! hit hard return line text!!!!!!!!Italicize like thisBold like thisA superscript: R2","code":"\nv + 2\nmusic <- c(\"bluegrass\", \"funk\", \"folk\")"},{"path":"using-r-markdown.html","id":"turning-in-your-work-1","chapter":"2 Using R Markdown","heading":"2.9 Turning in your work","text":"Save R Notebook download .Rmd file computer. don’t need download .nb.html file.Upload R Notebook ILIAS. find upload option today’s session.receive solution file deadline.\nsure upload deadline!\n","code":""},{"path":"what-is-data.html","id":"what-is-data","chapter":"3 What is data?","heading":"3 What is data?","text":"\nInstall R package\n\nLoad installed data set\n\nExplore data set recognize type variables\nData can anything 😄. Usually store data rectangular form, .e. variables columns observations rows. two dedicated object formats store data, namely data.frame() tibble(). similar characteristics, however, tibble considered modern form data frame offers advantages (details later).chapter, look data set called palmerpenguins. provided dedicated package, let’s install package first.","code":""},{"path":"what-is-data.html","id":"installing-r-packages","chapter":"3 What is data?","heading":"3.1 Installing R packages","text":"Packages available official CRAN (Comprehensive R Archive Network) can installed function install.packages('name_of_the_package'). important provide name package quotes (single double).load package, use function library(name_of_the_package), time without quotes!","code":"\ninstall.packages('palmerpenguins')\nlibrary(palmerpenguins)"},{"path":"what-is-data.html","id":"welcome-the-penguins","chapter":"3 What is data?","heading":"3.2 Welcome the penguins!","text":"\nFigure 3.1: Artwork @allison_horst\npackage dedicated website really worth visiting. package contains two data sets, explore shorter one, called penguins. load data set installed package, use function data(\"name_of_data_set\"). sure put name data set quotes (single double).Let’s look object penguins.object tibble contains data set 344 rows 8 columns, meaning 8 variables measured 344 animals. first column contains variable species , guessed , shows species animal. variable -called factor (indicated <fct> species). means, contains categorical information certain number (usually small one) distinct values called levels. levels case areThe code uses $ sign access whole column (.e. variable) data set. handy alternative square bracket method. syntax name_of_data_set$name_of_variable.also numerical variables tibble. numerical variable can continuous, e.g. bill_length_mm (indicated <dbl> meaning double), meaning contains decimal numbers discrete, e.g. year (indicated <int> meaning integer), meaning contains integers (whole numbers).summarize data set, can use function summary().","code":"\ndata(\"penguins\")\npenguins## # A tibble: 344 x 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # … with 334 more rows, and 2 more variables: sex <fct>, year <int>\nlevels(penguins$species)## [1] \"Adelie\"    \"Chinstrap\" \"Gentoo\"\nsummary(penguins)##       species          island    bill_length_mm  bill_depth_mm  \n##  Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n##  Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n##  Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n##                                  Mean   :43.92   Mean   :17.15  \n##                                  3rd Qu.:48.50   3rd Qu.:18.70  \n##                                  Max.   :59.60   Max.   :21.50  \n##                                  NA's   :2       NA's   :2      \n##  flipper_length_mm  body_mass_g       sex           year     \n##  Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n##  1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n##  Median :197.0     Median :4050   NA's  : 11   Median :2008  \n##  Mean   :200.9     Mean   :4202                Mean   :2008  \n##  3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n##  Max.   :231.0     Max.   :6300                Max.   :2009  \n##  NA's   :2         NA's   :2"},{"path":"what-is-data.html","id":"the-square-braces-revisited","chapter":"3 What is data?","heading":"3.3 The square braces revisited","text":"already know access certain position inside vector. tibble tow-dimensional object, rows columns. access particular measurement, need provide , row column index. following code picks value first row third column:","code":"\npenguins[1, 3]## # A tibble: 1 x 1\n##   bill_length_mm\n##            <dbl>\n## 1           39.1"},{"path":"what-is-data.html","id":"lets-see-them","chapter":"3 What is data?","heading":"3.4 Let’s see them","text":"talk much data visualisation later. now, just use code visualize relationship flipper length body mass animals.","code":"\nlibrary(ggplot2)\n\nggplot(data = penguins, mapping = aes(x = flipper_length_mm, y = body_mass_g, col = species)) +\n  geom_point() +\n  xlab('Flipper length (mm)') +\n  ylab('Body mass (g)')"},{"path":"what-is-data.html","id":"practice-on-your-own-2","chapter":"3 What is data?","heading":"3.5 Practice on your own!","text":"many categorical many numerical variables ? Consult help.many categorical many numerical variables ? Consult help.many Gentoo penguins present data set?many Gentoo penguins present data set?time span measurements?time span measurements?Find levels variable island.Find levels variable island.challenge 😄. Take code produced visualisation flipper length body mass animals. Make educated guess change code produces visualisation bill depth vs. body mass. Can also guess adjust label x axis?challenge 😄. Take code produced visualisation flipper length body mass animals. Make educated guess change code produces visualisation bill depth vs. body mass. Can also guess adjust label x axis?","code":""},{"path":"what-is-data.html","id":"reading-assignment-1","chapter":"3 What is data?","heading":"3.6 Reading assignment","text":"Chapter 1.3 Ismay Kim (2021).","code":""},{"path":"what-is-data.html","id":"turning-in-your-work-2","chapter":"3 What is data?","heading":"3.7 Turning in your work","text":"Save R Notebook download .Rmd file computer. don’t need download .nb.html file.Upload R Notebook ILIAS. find upload option today’s session.receive solution file deadline.\nsure upload deadline!\n","code":""},{"path":"what-is-data.html","id":"additional-reading","chapter":"3 What is data?","heading":"3.8 Additional reading","text":"case prefer flights penguins, can look data exploration Chapter 1.4 Ismay Kim (2021)","code":""},{"path":"import-visualize-and-explore-data.html","id":"import-visualize-and-explore-data","chapter":"4 Import, visualize and explore data","heading":"4 Import, visualize and explore data","text":"\nImport data R\n\nExplain general call function ggplot()\n\nPlot 5 frequently used types graphics\n","code":""},{"path":"import-visualize-and-explore-data.html","id":"data-import-from-text-files","chapter":"4 Import, visualize and explore data","heading":"4.1 Data import from text files","text":"import data set text file (e.g. .csv, .txt, .dat) R, use library readr part tydiverse. first load library.Let’s assume data stored folder data. case, change path accordingly. load data, can chose among several different functions start read_. generic one read_delim() can specify columns separated (delimited) data file.Let’s look data. data set greenhouse gas emissions source sector EU downloaded eurostat 2021-04-30. contains greenhouse gas emissions CO2 equivalent, Mio tonnes, per vehicle type. data base great source data reports 😄.result reading data function library readr always tibble. can see none variables factor. default behaviour readr. want variable coded factor transform hand, preferably functions package forcats.Let’s quick look data set.character variables, summary() count frequency different values. However, can get information function unique().data set contains measurements 33 EU countries. can also ask different types vehicle recorded.","code":"\nlibrary(tidyverse)\nemissions <- read_delim(file = 'data/emissions.csv', delim = ';')## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   unit = col_character(),\n##   airpol = col_character(),\n##   vehicle = col_character(),\n##   geo = col_character(),\n##   time = col_date(format = \"\"),\n##   values = col_double()\n## )\nemissions## # A tibble: 2,871 x 6\n##    unit     airpol                  vehicle    geo             time       values\n##    <chr>    <chr>                   <chr>      <chr>           <date>      <dbl>\n##  1 Million… Greenhouse gases (CO2,… Fuel comb… Austria         2018-01-01  14.4 \n##  2 Million… Greenhouse gases (CO2,… Fuel comb… Belgium         2018-01-01  14.4 \n##  3 Million… Greenhouse gases (CO2,… Fuel comb… Bulgaria        2018-01-01   5.78\n##  4 Million… Greenhouse gases (CO2,… Fuel comb… Switzerland     2018-01-01  11.0 \n##  5 Million… Greenhouse gases (CO2,… Fuel comb… Cyprus          2018-01-01   1.38\n##  6 Million… Greenhouse gases (CO2,… Fuel comb… Czechia         2018-01-01  11.9 \n##  7 Million… Greenhouse gases (CO2,… Fuel comb… Germany (until… 2018-01-01  97.8 \n##  8 Million… Greenhouse gases (CO2,… Fuel comb… Denmark         2018-01-01   6.85\n##  9 Million… Greenhouse gases (CO2,… Fuel comb… Estonia         2018-01-01   1.52\n## 10 Million… Greenhouse gases (CO2,… Fuel comb… Greece          2018-01-01   7.61\n## # … with 2,861 more rows\nsummary(emissions)##      unit              airpol            vehicle              geo           \n##  Length:2871        Length:2871        Length:2871        Length:2871       \n##  Class :character   Class :character   Class :character   Class :character  \n##  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n##                                                                             \n##                                                                             \n##                                                                             \n##                                                                             \n##       time                values         \n##  Min.   :1990-01-01   Min.   :  0.00609  \n##  1st Qu.:1997-01-01   1st Qu.:  0.25564  \n##  Median :2004-01-01   Median :  1.92403  \n##  Mean   :2004-01-01   Mean   :  8.52836  \n##  3rd Qu.:2011-01-01   3rd Qu.:  6.93899  \n##  Max.   :2018-01-01   Max.   :119.77824  \n##                       NA's   :232\nlength(unique(emissions$geo))## [1] 33\nunique(emissions$vehicle)## [1] \"Fuel combustion in cars\"                       \n## [2] \"Fuel combustion in heavy duty trucks and buses\"\n## [3] \"Fuel combustion in railways\""},{"path":"import-visualize-and-explore-data.html","id":"visualization-with-the-library-ggplot2","chapter":"4 Import, visualize and explore data","heading":"4.2 Visualization with the library ggplot2","text":"library ggplot2 powerful package data visualisation. name comes grammar graphics hints systematic approach visualisation. nutshell, ggplot2 defines statistical graphic follows:statistical graphic mapping variables data set aesthetic attributes geometric objects.ggplot2, graphic build step step, starting call core function ggplot(). specify following elements:data: data set containing variables visualised.data: data set containing variables visualised.aes: (aesthetic) attributes geometric object visualised. can x y variables, colour, shape, grouping variable etc.aes: (aesthetic) attributes geometric object visualised. can x y variables, colour, shape, grouping variable etc.geom: geometric object want plot, .e. lines, points, bars, boxes etc.geom: geometric object want plot, .e. lines, points, bars, boxes etc.","code":""},{"path":"import-visualize-and-explore-data.html","id":"line-plot","chapter":"4 Import, visualize and explore data","heading":"4.2.1 Line plot","text":"start line plot particularly suited time series. plotting 33 countries one graph much, first filter France emissions cars.call ggplot() prepares plotting area requested, show anything specify geometric object. geometric objects begin geom_. Every step building plot appended core call +.call can verbalised like following:Take data set emissions map following attributes:\nx-axsis variable time\ny-axsis variable values\nx-axsis variable timeon y-axsis variable valuesPlot data line (geom_line())order plot useful, label axes correctly (give title, figure caption shown). done adding function labs().","code":"\nemissions_france <- emissions %>% \n  filter(geo == 'France' & vehicle == 'Fuel combustion in cars')\nggplot(data = emissions_france, mapping = aes(x = time, y = values))\nggplot(data = emissions_france, mapping = aes(x = time, y = values)) +\n  geom_line()\nggplot(data = emissions_france, mapping = aes(x = time, y = values)) + \n  geom_line() +\n  labs(x = 'Time', y = 'Emissions (Mio tons)', title = 'Emissions in France')"},{"path":"import-visualize-and-explore-data.html","id":"point-plot","chapter":"4 Import, visualize and explore data","heading":"4.2.2 Point plot","text":"can add points plot geom_point(). principle, wouldn’t time series, wan’t show geom 😄.select two countries, aesthetic required distinguish time series. Let’s select France Italy.plot countries using different colours. Note (yet) select colours hand, specify variable used distinguish time series. colours chosen one country automatically.legend comes free! can change title legend setting colour = 'Country' call labs().","code":"\nggplot(data = emissions_france, mapping = aes(x = time, y = values)) + \n  geom_line() +\n  geom_point() +\n  labs(x = 'Time', y = 'Emissions (Mio tons)', title = 'Emissions in France')\nemissions_france_italy <- emissions %>% \n  filter(geo %in% c('France', 'Italy') & vehicle == 'Fuel combustion in cars')\nggplot(data = emissions_france_italy, mapping = aes(x = time, y = values, colour = geo)) + \n  geom_line() +\n  geom_point() +\n  labs(x = 'Time', y = 'Emissions (Mio tons)', title = 'Emissions in France and Italy', colour = 'Country')"},{"path":"import-visualize-and-explore-data.html","id":"histogram","chapter":"4 Import, visualize and explore data","heading":"4.3 Histogram","text":"Let’s look distribution emissions year 2018. filter data first.plot data histogram shows absolute frequencies data (.e. many data points fall particular interval emissions). shows distribution continuous variable. histogram, specify x variable, frequencies calculated geom_histogram() directly. specify 25 bins (intervals). familiar kind statistical summaries, please look Appendix Ismay Kim (2021) read part .1.5 Distribution.","code":"\nemissions_2018 <- emissions %>% \n  filter(time == '2018-01-01')\nggplot(data = emissions_2018, mapping = aes(x = values)) +\n  geom_histogram(bins = 25)## Warning: Removed 8 rows containing non-finite values (stat_bin)."},{"path":"import-visualize-and-explore-data.html","id":"boxplot","chapter":"4 Import, visualize and explore data","heading":"4.4 Boxplot","text":"boxplot calculates prominent statistics data set plots form box ‘whiskers’ (thus also called box--whiskers plot). Basically, calculating summary() (five-numbers: min, max, 25%, 50% 75% quantiles), figure. familiar kind statistical summaries, please look Appendix Ismay Kim (2021) read part .1.4 Five-number summary.Lets look kind summary plot. emissions distributed year? convert time factor variable order display data correctly (try happens don’t convert ).","code":"\nggplot(data = emissions, mapping = aes(x = factor(time), y = values)) +\n  geom_boxplot()## Warning: Removed 232 rows containing non-finite values (stat_boxplot).\nggplot(data = emissions, mapping = aes(x = factor(time), y = values)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 90))## Warning: Removed 232 rows containing non-finite values (stat_boxplot)."},{"path":"import-visualize-and-explore-data.html","id":"barplot","chapter":"4 Import, visualize and explore data","heading":"4.4.1 Barplot","text":"last geom want see geom_bar(). want know many data entries emissions contain per vehicle.Admittedly, boring plot 😄, number entries identical.","code":"\nggplot(data = emissions, mapping = aes(x = vehicle)) +\n  geom_bar()"},{"path":"import-visualize-and-explore-data.html","id":"practice-on-your-own-3","chapter":"4 Import, visualize and explore data","heading":"4.5 Practice on your own!","text":"histogram, boxplot barplot plotted labelled correctly. Correct axis labels find good titles graphs.histogram, boxplot barplot plotted labelled correctly. Correct axis labels find good titles graphs.Plot time series GDP data set gapminder France Germany. Filter data like : france_germany <- gapminder %>% filter(country %% c('France', 'Germany'))Plot time series GDP data set gapminder France Germany. Filter data like : france_germany <- gapminder %>% filter(country %% c('France', 'Germany'))Plot life expectancy vs. GDP 2007, use data set gapminder. Pick code filtering data task 6.1.3. Use aesthetics colour size. educated guess change title legends (google 😄).Plot life expectancy vs. GDP 2007, use data set gapminder. Pick code filtering data task 6.1.3. Use aesthetics colour size. educated guess change title legends (google 😄).GDP distributed Africa Europe 2007? Use data set gapminder. Filter data like : africa_europe <- gapminder2007 %>% filter(continent %% c('Africa', 'Europe')). Plot data histogram use aesthetic fill instead colour distinguish continents.GDP distributed Africa Europe 2007? Use data set gapminder. Filter data like : africa_europe <- gapminder2007 %>% filter(continent %% c('Africa', 'Europe')). Plot data histogram use aesthetic fill instead colour distinguish continents.GDP distributed different continents 2007? Use data set gapminder. Plot data boxplot.GDP distributed different continents 2007? Use data set gapminder. Plot data boxplot.many data points gapminder contain per continent? Visualize barplot.many data points gapminder contain per continent? Visualize barplot.","code":""},{"path":"import-visualize-and-explore-data.html","id":"reading-assignment-2","chapter":"4 Import, visualize and explore data","heading":"4.6 Reading assignment","text":"Chapter 2.1 Ismay Kim (2021)","code":""},{"path":"import-visualize-and-explore-data.html","id":"turning-in-your-work-3","chapter":"4 Import, visualize and explore data","heading":"4.7 Turning in your work","text":"Save R Notebook download .Rmd file computer. don’t need download .nb.html file.Upload R Notebook ILIAS. find upload option today’s session.receive solution file submission.\nsure upload deadline!\n","code":""},{"path":"import-visualize-and-explore-data.html","id":"additional-reading-1","chapter":"4 Import, visualize and explore data","heading":"4.8 Additional reading","text":"Chapters 2.2 2.9 Ismay Kim (2021)","code":""},{"path":"tidyverse.html","id":"tidyverse","chapter":"5 Explorative workflow with tidyverse","heading":"5 Explorative workflow with tidyverse","text":"\nName core packages tidyverse\n\nApply simple explorative workflow (read, summarize, plot) tidyverse\n\nUse functions dplyr data wrangling\ntidyverse collection R packages data analysis (https://www.tidyverse.org/). shares common philosophy data structure grammar data manipulation visualisation. Although might sound like something alien, tidyverse regular part R functions can mixed base R functions.best introduction tidyverse R4DS: “R Data Science” (Wickham Grolemund 2021). can read free (https://r4ds..co.nz/).","code":""},{"path":"tidyverse.html","id":"core-packages","chapter":"5 Explorative workflow with tidyverse","heading":"5.1 Core packages","text":"tidyverse comprises 8 core packages installed call install.packages('tidyverse'):Every packages Cheat Sheet, overview functions. get package’s cheat sheet click name (https://www.tidyverse.org/packages/), scroll section Cheatsheet.Besides core packages, tidyverse also installes long list supplementary packages can find : https://www.tidyverse.org/packages/","code":""},{"path":"tidyverse.html","id":"exploratory-data-analysis","chapter":"5 Explorative workflow with tidyverse","heading":"5.2 Exploratory data analysis","text":"Exploratory data analysis important first step data analysis. using advanced statistical method, exploratory analysis must . comprises roughly following steps:import inspect dataclean (tidy) data necessarysummarize create new variables necessaryplot many different plots possible get good overview patterns data distribution","code":""},{"path":"tidyverse.html","id":"read-data-revisited","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.1 Read data, revisited","text":"load library tidyverse first.Last time used function read_delim() import data R. function general whole family functions, starting read_*: read_csv(), read_csv2() etc. parameters need verify respective help pages want use .exploratory data analysis use data German Meteo Service (Deutscher Wetterdienst) downloaded 2020-05-24 (https://www.dwd.de/DE/leistungen/klimadatendeutschland/klimadatendeutschland.html). data set contains hourly measurements relative air humidity (%) air temperature (°C) three meteo stations, namely Hof, Frankfurt Köln-Bonn. data named meteo.csv.read_delim() reports reading data variables recognizes. good hint spot possible problems. numerical variables read <dbl>? characters recognized <char> etc. code , parameter trim_ws = T removes leading zeroes.Let’s showr glimps data.data set contains following variables:read_* always returns tibble.","code":"\nlibrary(tidyverse)\ntemp_humid <- read_delim('data/meteo.csv', delim = ';',    trim_ws = T)## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   STATIONS_ID = col_double(),\n##   MESS_DATUM = col_double(),\n##   QN_9 = col_double(),\n##   TT_TU = col_double(),\n##   RF_TU = col_double(),\n##   eor = col_character()\n## )\ntemp_humid## # A tibble: 39,600 x 6\n##    STATIONS_ID MESS_DATUM  QN_9 TT_TU RF_TU eor  \n##          <dbl>      <dbl> <dbl> <dbl> <dbl> <chr>\n##  1        2261 2018111900     3  -2.8    99 eor  \n##  2        2261 2018111901     3  -2.5   100 eor  \n##  3        2261 2018111902     3  -2.3   100 eor  \n##  4        2261 2018111903     3  -2     100 eor  \n##  5        2261 2018111904     3  -1.9    99 eor  \n##  6        2261 2018111905     3  -2.1    99 eor  \n##  7        2261 2018111906     3  -1.8    99 eor  \n##  8        2261 2018111907     3  -1.5    99 eor  \n##  9        2261 2018111908     3  -1.1    99 eor  \n## 10        2261 2018111909     3  -0.6    97 eor  \n## # … with 39,590 more rows\nclass(temp_humid)## [1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\""},{"path":"tidyverse.html","id":"date-and-time-made-easy","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.2 Date and time made easy","text":"useful package handle date time called lubridate. part core packages tidyverse installed long list additional packages. use convert variable MESS_DATUM real date-time variable.function ymd_h() converts character vectors date-time objects provided format year, month, day, hour. function different formats; consult help.conversion, variables recognised <dttm> date-time.","code":"\nlibrary(lubridate)\n\ntemp_humid$MESS_DATUM <- ymd_h(temp_humid$MESS_DATUM)\n\ntemp_humid## # A tibble: 39,600 x 6\n##    STATIONS_ID MESS_DATUM           QN_9 TT_TU RF_TU eor  \n##          <dbl> <dttm>              <dbl> <dbl> <dbl> <chr>\n##  1        2261 2018-11-19 00:00:00     3  -2.8    99 eor  \n##  2        2261 2018-11-19 01:00:00     3  -2.5   100 eor  \n##  3        2261 2018-11-19 02:00:00     3  -2.3   100 eor  \n##  4        2261 2018-11-19 03:00:00     3  -2     100 eor  \n##  5        2261 2018-11-19 04:00:00     3  -1.9    99 eor  \n##  6        2261 2018-11-19 05:00:00     3  -2.1    99 eor  \n##  7        2261 2018-11-19 06:00:00     3  -1.8    99 eor  \n##  8        2261 2018-11-19 07:00:00     3  -1.5    99 eor  \n##  9        2261 2018-11-19 08:00:00     3  -1.1    99 eor  \n## 10        2261 2018-11-19 09:00:00     3  -0.6    97 eor  \n## # … with 39,590 more rows"},{"path":"tidyverse.html","id":"summarize","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.3 Summarize","text":"three meteo station following IDs:want know many measurements per station data set contains.operator %>% called pipe pronounced . code temp_humid %>% group_by(STATIONS_ID) %>% count() can read : take object temp_humid, group STATIONS_ID count measurments group. pipe operator comes package magrittr (https://magrittr.tidyverse.org/). core operator tidyverse makes code readable easier follow humans. Perhaps beginning, soon 🤓.","code":"\nstation_ids <-  c('2261' = 'Hof', '1420' = 'Frankfurt', '2667' = 'Koeln')\ntemp_humid %>% \n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 3 x 2\n## # Groups:   STATIONS_ID [3]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        1420 13200\n## 2        2261 13200\n## 3        2667 13200"},{"path":"tidyverse.html","id":"the-grammar-of-data-manipulation-dplyr","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.4 The grammar of data manipulation – dplyr","text":"function count() part library dplyr, collection functions named verbs. Thus, easy imagine function 😄). 5 core functions :want know many measurements recorded particular meteo station, first filter ID:function filter() accepts logical tests. every row STATION_ID, == checks whether entry equals 2667. == logical operator means left side equals right sight. case, == returns TRUE otherwise returns FALSE. filter() selects rows TRUE returned. useful logical operators :logical boolean operators handeled tutorials (see ) help pages filter().can combine several test operator |, example. , want filter rows containing either ID 2667 ID 2261:can achieved excluding third station:alternative, can use operator %% checks whether row contains one entries vector.","code":"\ntemp_humid %>% \n  filter(STATIONS_ID == '2667') %>%\n  count()## # A tibble: 1 x 1\n##       n\n##   <int>\n## 1 13200\ntemp_humid %>% \n  filter(STATIONS_ID == '2667' | STATIONS_ID == '2261') %>%\n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 2 x 2\n## # Groups:   STATIONS_ID [2]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        2261 13200\n## 2        2667 13200\ntemp_humid %>% \n  filter(STATIONS_ID != '1420') %>%\n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 2 x 2\n## # Groups:   STATIONS_ID [2]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        2261 13200\n## 2        2667 13200\ntemp_humid %>% \n  filter(STATIONS_ID %in% c('2667', '2261')) %>%\n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 2 x 2\n## # Groups:   STATIONS_ID [2]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        2261 13200\n## 2        2667 13200"},{"path":"tidyverse.html","id":"visualise","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.5 Visualise","text":"plot time series use trick split along three different plots function facet_wrap(). needs variable separate data plots chose STATIONS_ID. splitting variable must preceeded ~.","code":"\nggplot(data = temp_humid, aes(x = MESS_DATUM, y = TT_TU)) + \n  geom_line() +\n  facet_wrap(~STATIONS_ID, nrow = 3) +\n  labs(x = 'Time', y = 'Temperature (°C)')"},{"path":"tidyverse.html","id":"new-variables-with-mutate","chapter":"5 Explorative workflow with tidyverse","heading":"5.2.6 New variables with mutate()","text":"want calculate monthly means standard deviations air temperature humidity. First, need generate temporal information, namely year month used group temperature values calculate mean() sd(). can achieved functions year()month() library lubridate. function mutate() can create new variables data object.next step, create new data set calculate means standard deviations. order get station, year month, group data accordingly. group several variables, just enumerate comma (quotation c() necessary).new object monthly_means grouped tibble, indicated grouped_df output str() shows structure object.calculations better done ungrouped data. Therefore, remove grouping. change data .plot monthly data, need proper monthly date object. attribute monthly means first respective month. , lubridate helps task. function parse_dat_time() genral function taking character string returning date-time object. need “glue” variables year month together paste0() (yes, zero, O!) form string specify orders = 'ym', .e. year month. Finally, relocate() new variable year_month variable year convenience (, created last varialbe data set).Now, can plot mean air temperature.can also visualise standard deviations.use semi-transparent band show variability (standard deviation).One last detail. titles top facets show station IDs. employee German Meteo Service, probably know hart. better use city names. vector station_ids called named vector right structure change titles facets: assignes every id city name, .e. 2261 = ‘Hof.’use station_ids change titles:","code":"\ntemp_humid <- temp_humid %>% \n  mutate(year = year(MESS_DATUM),\n         month = month(MESS_DATUM))\n\ntemp_humid## # A tibble: 39,600 x 8\n##    STATIONS_ID MESS_DATUM           QN_9 TT_TU RF_TU eor    year month\n##          <dbl> <dttm>              <dbl> <dbl> <dbl> <chr> <dbl> <dbl>\n##  1        2261 2018-11-19 00:00:00     3  -2.8    99 eor    2018    11\n##  2        2261 2018-11-19 01:00:00     3  -2.5   100 eor    2018    11\n##  3        2261 2018-11-19 02:00:00     3  -2.3   100 eor    2018    11\n##  4        2261 2018-11-19 03:00:00     3  -2     100 eor    2018    11\n##  5        2261 2018-11-19 04:00:00     3  -1.9    99 eor    2018    11\n##  6        2261 2018-11-19 05:00:00     3  -2.1    99 eor    2018    11\n##  7        2261 2018-11-19 06:00:00     3  -1.8    99 eor    2018    11\n##  8        2261 2018-11-19 07:00:00     3  -1.5    99 eor    2018    11\n##  9        2261 2018-11-19 08:00:00     3  -1.1    99 eor    2018    11\n## 10        2261 2018-11-19 09:00:00     3  -0.6    97 eor    2018    11\n## # … with 39,590 more rows\nmonthly_means <- temp_humid %>%\n  group_by(STATIONS_ID, year, month) %>% \n  summarize(mean_T = mean(TT_TU), mean_RH = mean(RF_TU),\n            sd_T = sd(TT_TU), sd_RH = sd(RF_TU))## `summarise()` has grouped output by 'STATIONS_ID', 'year'. You can override using the `.groups` argument.\nmonthly_means## # A tibble: 57 x 7\n## # Groups:   STATIONS_ID, year [9]\n##    STATIONS_ID  year month mean_T mean_RH  sd_T sd_RH\n##          <dbl> <dbl> <dbl>  <dbl>   <dbl> <dbl> <dbl>\n##  1        1420  2018    11   4.00    79.7  1.82  9.96\n##  2        1420  2018    12   4.73    83.7  4.20 11.7 \n##  3        1420  2019     1   2.12    79.3  3.76 10.0 \n##  4        1420  2019     2   4.48    74.1  4.69 17.7 \n##  5        1420  2019     3   8.28    68.5  4.08 16.1 \n##  6        1420  2019     4  11.7     61.0  5.52 21.8 \n##  7        1420  2019     5  12.7     67.5  4.64 20.1 \n##  8        1420  2019     6  21.4     60.6  6.05 21.2 \n##  9        1420  2019     7  21.6     55.6  5.90 21.8 \n## 10        1420  2019     8  20.7     65.6  4.94 20.8 \n## # … with 47 more rows\nstr(monthly_means)## grouped_df [57 × 7] (S3: grouped_df/tbl_df/tbl/data.frame)\n##  $ STATIONS_ID: num [1:57] 1420 1420 1420 1420 1420 1420 1420 1420 1420 1420 ...\n##  $ year       : num [1:57] 2018 2018 2019 2019 2019 ...\n##  $ month      : num [1:57] 11 12 1 2 3 4 5 6 7 8 ...\n##  $ mean_T     : num [1:57] 4 4.73 2.12 4.48 8.28 ...\n##  $ mean_RH    : num [1:57] 79.7 83.7 79.3 74.1 68.5 ...\n##  $ sd_T       : num [1:57] 1.82 4.2 3.76 4.69 4.08 ...\n##  $ sd_RH      : num [1:57] 9.96 11.68 10.04 17.73 16.1 ...\n##  - attr(*, \"groups\")= tibble [9 × 3] (S3: tbl_df/tbl/data.frame)\n##   ..$ STATIONS_ID: num [1:9] 1420 1420 1420 2261 2261 ...\n##   ..$ year       : num [1:9] 2018 2019 2020 2018 2019 ...\n##   ..$ .rows      : list<int> [1:9] \n##   .. ..$ : int [1:2] 1 2\n##   .. ..$ : int [1:12] 3 4 5 6 7 8 9 10 11 12 ...\n##   .. ..$ : int [1:5] 15 16 17 18 19\n##   .. ..$ : int [1:2] 20 21\n##   .. ..$ : int [1:12] 22 23 24 25 26 27 28 29 30 31 ...\n##   .. ..$ : int [1:5] 34 35 36 37 38\n##   .. ..$ : int [1:2] 39 40\n##   .. ..$ : int [1:12] 41 42 43 44 45 46 47 48 49 50 ...\n##   .. ..$ : int [1:5] 53 54 55 56 57\n##   .. ..@ ptype: int(0) \n##   ..- attr(*, \".drop\")= logi TRUE\nmonthly_means <- ungroup(monthly_means)\nmonthly_means <- monthly_means %>%\n  mutate(year_month = parse_date_time(paste0(year, month), orders = 'ym', tz = 'CET')) %>% \n  relocate(year_month, .before = year)\n\nmonthly_means## # A tibble: 57 x 8\n##    STATIONS_ID year_month           year month mean_T mean_RH  sd_T sd_RH\n##          <dbl> <dttm>              <dbl> <dbl>  <dbl>   <dbl> <dbl> <dbl>\n##  1        1420 2018-11-01 00:00:00  2018    11   4.00    79.7  1.82  9.96\n##  2        1420 2018-12-01 00:00:00  2018    12   4.73    83.7  4.20 11.7 \n##  3        1420 2019-01-01 00:00:00  2019     1   2.12    79.3  3.76 10.0 \n##  4        1420 2019-02-01 00:00:00  2019     2   4.48    74.1  4.69 17.7 \n##  5        1420 2019-03-01 00:00:00  2019     3   8.28    68.5  4.08 16.1 \n##  6        1420 2019-04-01 00:00:00  2019     4  11.7     61.0  5.52 21.8 \n##  7        1420 2019-05-01 00:00:00  2019     5  12.7     67.5  4.64 20.1 \n##  8        1420 2019-06-01 00:00:00  2019     6  21.4     60.6  6.05 21.2 \n##  9        1420 2019-07-01 00:00:00  2019     7  21.6     55.6  5.90 21.8 \n## 10        1420 2019-08-01 00:00:00  2019     8  20.7     65.6  4.94 20.8 \n## # … with 47 more rows\nggplot(data = monthly_means, aes(x = year_month, y = mean_T, col = factor(STATIONS_ID))) + \n  geom_line() + \n  labs(x = 'Time', y = 'Temperature (°C)', color = 'Meteo station')\nggplot(monthly_means, aes(x = year_month, y = mean_T, ymin = mean_T - sd_T, ymax = mean_T + sd_T)) +\n  geom_errorbar() +\n  geom_point() +\n  facet_wrap(~STATIONS_ID, nrow = 3) + \n  labs(x = 'Time', y = 'Temperature (°C)')\nggplot(monthly_means, aes(x = year_month, y = mean_T, ymin = mean_T - sd_T, ymax = mean_T + sd_T)) +\n  geom_ribbon(alpha = 0.5) +\n  geom_line() +\n  facet_wrap(~STATIONS_ID, nrow = 3) + \n  labs(x = 'Time', y = 'Temperature (°C)')\nstation_ids##        2261        1420        2667 \n##       \"Hof\" \"Frankfurt\"     \"Koeln\"\nggplot(monthly_means, aes(x = year_month, y = mean_T, ymin = mean_T - sd_T, ymax = mean_T + sd_T)) +\n  geom_ribbon(alpha = 0.5) +\n  geom_line() +\n  facet_wrap(~STATIONS_ID, nrow = 3, labeller = labeller(STATIONS_ID = station_ids)) + \n  labs(x = 'Time', y = 'Temperature (°C)')"},{"path":"tidyverse.html","id":"practice-on-your-own-4","chapter":"5 Explorative workflow with tidyverse","heading":"5.3 Practice on your own!","text":"Plot means standard deviations air humidity instead air temperature.Plot means standard deviations air humidity instead air temperature.tutorials “Work data” Primers collection RStudio Cloud. can access tutorials : https://rstudio.cloud/learn/primers/2Do tutorials “Work data” Primers collection RStudio Cloud. can access tutorials : https://rstudio.cloud/learn/primers/2Do tutorials “Visualize Data” Primers collection RStudio Cloud. can access tutorials :https://rstudio.cloud/learn/primers/3Do tutorials “Visualize Data” Primers collection RStudio Cloud. can access tutorials :https://rstudio.cloud/learn/primers/3","code":""},{"path":"tidyverse.html","id":"reading-assignment-3","chapter":"5 Explorative workflow with tidyverse","heading":"5.4 Reading assignment","text":"Read chapter 3 (3.5) Ismay Kim (2021)","code":""},{"path":"tidyverse.html","id":"additional-reading-and-videos","chapter":"5 Explorative workflow with tidyverse","heading":"5.5 Additional reading and videos","text":"information statistical graphical summaries geoms: R4DS Wickham Grolemund (2021): Chapter 5 “Data transformation”information statistical graphical summaries geoms: R4DS Wickham Grolemund (2021): Chapter 5 “Data transformation”live exploratory data analysis main author tidyverse, Hadley Wickham. Really informative, types fast 😄.live exploratory data analysis main author tidyverse, Hadley Wickham. Really informative, types fast 😄.","code":""},{"path":"additional-exercises.html","id":"additional-exercises","chapter":"6 Additional exercises","heading":"6 Additional exercises","text":"","code":""},{"path":"additional-exercises.html","id":"introduction-to-r-and-rstudio-server-pro-1","chapter":"6 Additional exercises","heading":"6.1 Introduction to R and RStudio Server Pro","text":"","code":""},{"path":"additional-exercises.html","id":"rob1","chapter":"6 Additional exercises","heading":"6.1.1 Rob’s account book","text":"young master student Rob Stat thinks seriously mother’s advice monitor expenses. begins writing spends week Mensa:\nTable 6.1: Rob’s account book\nGenerate vector Rob’s expenses assign variable expenses. Use function c() use numeric expenses , days week.much Rob spend week? Use function sum().Rob seems spent smallest amount Tuesday. much spent paid much every day week? Use array notation square brackets.Unfortunately, Rob misspelled amount Tuesday. Actually, invited girl friend lunch paid 7.95 € instead 2.90 €.Correct Rob’s typo.result change?","code":""},{"path":"additional-exercises.html","id":"rob2","chapter":"6 Additional exercises","heading":"6.1.2 Missing values","text":"R codes missing values NA. Rob ate Mensa last Monday, forgot write amount.\nTable 6.2: Rob’s account book, cont.\nNA change calculated sum?Read happens data contains NAs calling help sum, .e. type ?sum R console.Correct call sum() accordingly.","code":""},{"path":"additional-exercises.html","id":"firstplot","chapter":"6 Additional exercises","heading":"6.1.3 Your very first plot","text":"particular beginning learning R forget . R really beautiful want analyse learn real data.Even don’t fully understand following code, just copy paste .R file let run!data set . Use help like ?gapminder.colours represent?size circles represent?describe relationship GDP per capita Life expectancy?","code":"\nlibrary(tidyverse)\nlibrary(gapminder)\n\ngapminder2007 <- gapminder %>% \n  filter(year == 2007)\n\nggplot(gapminder2007, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  xlab('GDP per capita') +\n  ylab('Life expectancy') +\n  labs(title = 'Gapminder data for the year 2007')"},{"path":"literature-1.html","id":"literature-1","chapter":"Literature","heading":"Literature","text":"","code":""}]
